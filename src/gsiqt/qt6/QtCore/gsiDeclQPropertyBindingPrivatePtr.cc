
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2021 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQPropertyBindingPrivatePtr.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include <QPropertyBindingPrivatePtr>
#include "gsiQt.h"
#include "gsiQtCoreCommon.h"
#include <memory>

// -----------------------------------------------------------------------
// class QPropertyBindingPrivatePtr

//  Constructor QPropertyBindingPrivatePtr::QPropertyBindingPrivatePtr()


static void _init_ctor_QPropertyBindingPrivatePtr_0 (qt_gsi::GenericStaticMethod *decl)
{
  decl->set_return_new<QPropertyBindingPrivatePtr> ();
}

static void _call_ctor_QPropertyBindingPrivatePtr_0 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QPropertyBindingPrivatePtr *> (new QPropertyBindingPrivatePtr ());
}


//  Constructor QPropertyBindingPrivatePtr::QPropertyBindingPrivatePtr(QPropertyBindingPrivatePtr::T *data)


static void _init_ctor_QPropertyBindingPrivatePtr_3512 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("data");
  decl->add_arg<QPropertyBindingPrivatePtr::T * > (argspec_0);
  decl->set_return_new<QPropertyBindingPrivatePtr> ();
}

static void _call_ctor_QPropertyBindingPrivatePtr_3512 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QPropertyBindingPrivatePtr::T *arg1 = gsi::arg_reader<QPropertyBindingPrivatePtr::T * >() (args, heap);
  ret.write<QPropertyBindingPrivatePtr *> (new QPropertyBindingPrivatePtr (arg1));
}


//  Constructor QPropertyBindingPrivatePtr::QPropertyBindingPrivatePtr(const QPropertyBindingPrivatePtr &o)


static void _init_ctor_QPropertyBindingPrivatePtr_4003 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("o");
  decl->add_arg<const QPropertyBindingPrivatePtr & > (argspec_0);
  decl->set_return_new<QPropertyBindingPrivatePtr> ();
}

static void _call_ctor_QPropertyBindingPrivatePtr_4003 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QPropertyBindingPrivatePtr &arg1 = gsi::arg_reader<const QPropertyBindingPrivatePtr & >() (args, heap);
  ret.write<QPropertyBindingPrivatePtr *> (new QPropertyBindingPrivatePtr (arg1));
}


// const QPropertyBindingPrivatePtr::T *QPropertyBindingPrivatePtr::constData()


static void _init_f_constData_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<const QPropertyBindingPrivatePtr::T * > ();
}

static void _call_f_constData_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<const QPropertyBindingPrivatePtr::T * > ((const QPropertyBindingPrivatePtr::T *)((QPropertyBindingPrivatePtr *)cls)->constData ());
}


// QPropertyBindingPrivatePtr::T *QPropertyBindingPrivatePtr::data()


static void _init_f_data_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QPropertyBindingPrivatePtr::T * > ();
}

static void _call_f_data_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QPropertyBindingPrivatePtr::T * > ((QPropertyBindingPrivatePtr::T *)((QPropertyBindingPrivatePtr *)cls)->data ());
}


// void QPropertyBindingPrivatePtr::destroyAndFreeMemory()


static void _init_f_destroyAndFreeMemory_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<void > ();
}

static void _call_f_destroyAndFreeMemory_0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QPropertyBindingPrivatePtr *)cls)->destroyAndFreeMemory ();
}


// QPropertyBindingPrivatePtr::T *QPropertyBindingPrivatePtr::get()


static void _init_f_get_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QPropertyBindingPrivatePtr::T * > ();
}

static void _call_f_get_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QPropertyBindingPrivatePtr::T * > ((QPropertyBindingPrivatePtr::T *)((QPropertyBindingPrivatePtr *)cls)->get ());
}


// bool QPropertyBindingPrivatePtr::operator!()


static void _init_f_operator_excl__c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_operator_excl__c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QPropertyBindingPrivatePtr *)cls)->operator! ());
}


// QPropertyBindingPrivatePtr::T &QPropertyBindingPrivatePtr::operator*()


static void _init_f_operator_star__c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QPropertyBindingPrivatePtr::T & > ();
}

static void _call_f_operator_star__c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QPropertyBindingPrivatePtr::T & > ((QPropertyBindingPrivatePtr::T &)((QPropertyBindingPrivatePtr *)cls)->operator* ());
}


// QPropertyBindingPrivatePtr::T *QPropertyBindingPrivatePtr::operator->()


static void _init_f_operator_minus__gt__0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QPropertyBindingPrivatePtr::T * > ();
}

static void _call_f_operator_minus__gt__0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QPropertyBindingPrivatePtr::T * > ((QPropertyBindingPrivatePtr::T *)((QPropertyBindingPrivatePtr *)cls)->operator-> ());
}


// QPropertyBindingPrivatePtr::T *QPropertyBindingPrivatePtr::operator->()


static void _init_f_operator_minus__gt__c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QPropertyBindingPrivatePtr::T * > ();
}

static void _call_f_operator_minus__gt__c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QPropertyBindingPrivatePtr::T * > ((QPropertyBindingPrivatePtr::T *)((QPropertyBindingPrivatePtr *)cls)->operator-> ());
}


// QPropertyBindingPrivatePtr &QPropertyBindingPrivatePtr::operator=(const QPropertyBindingPrivatePtr &o)


static void _init_f_operator_eq__4003 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("o");
  decl->add_arg<const QPropertyBindingPrivatePtr & > (argspec_0);
  decl->set_return<QPropertyBindingPrivatePtr & > ();
}

static void _call_f_operator_eq__4003 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QPropertyBindingPrivatePtr &arg1 = gsi::arg_reader<const QPropertyBindingPrivatePtr & >() (args, heap);
  ret.write<QPropertyBindingPrivatePtr & > ((QPropertyBindingPrivatePtr &)((QPropertyBindingPrivatePtr *)cls)->operator= (arg1));
}


// QPropertyBindingPrivatePtr &QPropertyBindingPrivatePtr::operator=(QPropertyBindingPrivatePtr::T *o)


static void _init_f_operator_eq__3512 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("o");
  decl->add_arg<QPropertyBindingPrivatePtr::T * > (argspec_0);
  decl->set_return<QPropertyBindingPrivatePtr & > ();
}

static void _call_f_operator_eq__3512 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QPropertyBindingPrivatePtr::T *arg1 = gsi::arg_reader<QPropertyBindingPrivatePtr::T * >() (args, heap);
  ret.write<QPropertyBindingPrivatePtr & > ((QPropertyBindingPrivatePtr &)((QPropertyBindingPrivatePtr *)cls)->operator= (arg1));
}


// void QPropertyBindingPrivatePtr::reset(QPropertyBindingPrivatePtr::T *ptr)


static void _init_f_reset_3512 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("ptr", true, "nullptr");
  decl->add_arg<QPropertyBindingPrivatePtr::T * > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_reset_3512 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QPropertyBindingPrivatePtr::T *arg1 = args ? gsi::arg_reader<QPropertyBindingPrivatePtr::T * >() (args, heap) : gsi::arg_maker<QPropertyBindingPrivatePtr::T * >() (nullptr, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QPropertyBindingPrivatePtr *)cls)->reset (arg1);
}


// void QPropertyBindingPrivatePtr::swap(QPropertyBindingPrivatePtr &other)


static void _init_f_swap_3308 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<QPropertyBindingPrivatePtr & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_swap_3308 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QPropertyBindingPrivatePtr &arg1 = gsi::arg_reader<QPropertyBindingPrivatePtr & >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QPropertyBindingPrivatePtr *)cls)->swap (arg1);
}


// QPropertyBindingPrivatePtr::T *QPropertyBindingPrivatePtr::take()


static void _init_f_take_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QPropertyBindingPrivatePtr::T * > ();
}

static void _call_f_take_0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QPropertyBindingPrivatePtr::T * > ((QPropertyBindingPrivatePtr::T *)((QPropertyBindingPrivatePtr *)cls)->take ());
}



namespace gsi
{

static gsi::Methods methods_QPropertyBindingPrivatePtr () {
  gsi::Methods methods;
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QPropertyBindingPrivatePtr::QPropertyBindingPrivatePtr()\nThis method creates an object of class QPropertyBindingPrivatePtr.", &_init_ctor_QPropertyBindingPrivatePtr_0, &_call_ctor_QPropertyBindingPrivatePtr_0);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QPropertyBindingPrivatePtr::QPropertyBindingPrivatePtr(QPropertyBindingPrivatePtr::T *data)\nThis method creates an object of class QPropertyBindingPrivatePtr.", &_init_ctor_QPropertyBindingPrivatePtr_3512, &_call_ctor_QPropertyBindingPrivatePtr_3512);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QPropertyBindingPrivatePtr::QPropertyBindingPrivatePtr(const QPropertyBindingPrivatePtr &o)\nThis method creates an object of class QPropertyBindingPrivatePtr.", &_init_ctor_QPropertyBindingPrivatePtr_4003, &_call_ctor_QPropertyBindingPrivatePtr_4003);
  methods += new qt_gsi::GenericMethod ("constData", "@brief Method const QPropertyBindingPrivatePtr::T *QPropertyBindingPrivatePtr::constData()\n", true, &_init_f_constData_c0, &_call_f_constData_c0);
  methods += new qt_gsi::GenericMethod ("data", "@brief Method QPropertyBindingPrivatePtr::T *QPropertyBindingPrivatePtr::data()\n", true, &_init_f_data_c0, &_call_f_data_c0);
  methods += new qt_gsi::GenericMethod ("destroyAndFreeMemory", "@brief Method void QPropertyBindingPrivatePtr::destroyAndFreeMemory()\n", false, &_init_f_destroyAndFreeMemory_0, &_call_f_destroyAndFreeMemory_0);
  methods += new qt_gsi::GenericMethod ("get", "@brief Method QPropertyBindingPrivatePtr::T *QPropertyBindingPrivatePtr::get()\n", true, &_init_f_get_c0, &_call_f_get_c0);
  methods += new qt_gsi::GenericMethod ("!", "@brief Method bool QPropertyBindingPrivatePtr::operator!()\n", true, &_init_f_operator_excl__c0, &_call_f_operator_excl__c0);
  methods += new qt_gsi::GenericMethod ("*", "@brief Method QPropertyBindingPrivatePtr::T &QPropertyBindingPrivatePtr::operator*()\n", true, &_init_f_operator_star__c0, &_call_f_operator_star__c0);
  methods += new qt_gsi::GenericMethod ("->", "@brief Method QPropertyBindingPrivatePtr::T *QPropertyBindingPrivatePtr::operator->()\n", false, &_init_f_operator_minus__gt__0, &_call_f_operator_minus__gt__0);
  methods += new qt_gsi::GenericMethod ("->", "@brief Method QPropertyBindingPrivatePtr::T *QPropertyBindingPrivatePtr::operator->()\n", true, &_init_f_operator_minus__gt__c0, &_call_f_operator_minus__gt__c0);
  methods += new qt_gsi::GenericMethod ("assign", "@brief Method QPropertyBindingPrivatePtr &QPropertyBindingPrivatePtr::operator=(const QPropertyBindingPrivatePtr &o)\n", false, &_init_f_operator_eq__4003, &_call_f_operator_eq__4003);
  methods += new qt_gsi::GenericMethod ("assign", "@brief Method QPropertyBindingPrivatePtr &QPropertyBindingPrivatePtr::operator=(QPropertyBindingPrivatePtr::T *o)\n", false, &_init_f_operator_eq__3512, &_call_f_operator_eq__3512);
  methods += new qt_gsi::GenericMethod ("reset", "@brief Method void QPropertyBindingPrivatePtr::reset(QPropertyBindingPrivatePtr::T *ptr)\n", false, &_init_f_reset_3512, &_call_f_reset_3512);
  methods += new qt_gsi::GenericMethod ("swap", "@brief Method void QPropertyBindingPrivatePtr::swap(QPropertyBindingPrivatePtr &other)\n", false, &_init_f_swap_3308, &_call_f_swap_3308);
  methods += new qt_gsi::GenericMethod ("take", "@brief Method QPropertyBindingPrivatePtr::T *QPropertyBindingPrivatePtr::take()\n", false, &_init_f_take_0, &_call_f_take_0);
  return methods;
}

gsi::Class<QPropertyBindingPrivatePtr> decl_QPropertyBindingPrivatePtr ("QtCore", "QPropertyBindingPrivatePtr",
  methods_QPropertyBindingPrivatePtr (),
  "@qt\n@brief Binding of QPropertyBindingPrivatePtr");


GSI_QTCORE_PUBLIC gsi::Class<QPropertyBindingPrivatePtr> &qtdecl_QPropertyBindingPrivatePtr () { return decl_QPropertyBindingPrivatePtr; }

}

