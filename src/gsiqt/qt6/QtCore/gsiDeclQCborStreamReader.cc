
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2021 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQCborStreamReader.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include <QCborStreamReader>
#include <QCborError>
#include <QIODevice>
#include "gsiQt.h"
#include "gsiQtCoreCommon.h"
#include "gsiDeclQtCoreTypeTraits.h"
#include <memory>

// -----------------------------------------------------------------------
// class QCborStreamReader

//  Constructor QCborStreamReader::QCborStreamReader()


static void _init_ctor_QCborStreamReader_0 (qt_gsi::GenericStaticMethod *decl)
{
  decl->set_return_new<QCborStreamReader> ();
}

static void _call_ctor_QCborStreamReader_0 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QCborStreamReader *> (new QCborStreamReader ());
}


//  Constructor QCborStreamReader::QCborStreamReader(const char *data, qsizetype len)


static void _init_ctor_QCborStreamReader_3065 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("data");
  decl->add_arg<const char * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("len");
  decl->add_arg<qsizetype > (argspec_1);
  decl->set_return_new<QCborStreamReader> ();
}

static void _call_ctor_QCborStreamReader_3065 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const char *arg1 = gsi::arg_reader<const char * >() (args, heap);
  qsizetype arg2 = gsi::arg_reader<qsizetype >() (args, heap);
  ret.write<QCborStreamReader *> (new QCborStreamReader (arg1, arg2));
}


//  Constructor QCborStreamReader::QCborStreamReader(const quint8 *data, qsizetype len)


static void _init_ctor_QCborStreamReader_3268 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("data");
  decl->add_arg<const quint8 * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("len");
  decl->add_arg<qsizetype > (argspec_1);
  decl->set_return_new<QCborStreamReader> ();
}

static void _call_ctor_QCborStreamReader_3268 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const quint8 *arg1 = gsi::arg_reader<const quint8 * >() (args, heap);
  qsizetype arg2 = gsi::arg_reader<qsizetype >() (args, heap);
  ret.write<QCborStreamReader *> (new QCborStreamReader (arg1, arg2));
}


//  Constructor QCborStreamReader::QCborStreamReader(const QByteArray &data)


static void _init_ctor_QCborStreamReader_2309 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("data");
  decl->add_arg<const QByteArray & > (argspec_0);
  decl->set_return_new<QCborStreamReader> ();
}

static void _call_ctor_QCborStreamReader_2309 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QByteArray &arg1 = gsi::arg_reader<const QByteArray & >() (args, heap);
  ret.write<QCborStreamReader *> (new QCborStreamReader (arg1));
}


//  Constructor QCborStreamReader::QCborStreamReader(QIODevice *device)


static void _init_ctor_QCborStreamReader_1447 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("device");
  decl->add_arg<QIODevice * > (argspec_0);
  decl->set_return_new<QCborStreamReader> ();
}

static void _call_ctor_QCborStreamReader_1447 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QIODevice *arg1 = gsi::arg_reader<QIODevice * >() (args, heap);
  ret.write<QCborStreamReader *> (new QCborStreamReader (arg1));
}


//  Constructor QCborStreamReader::QCborStreamReader(const QCborStreamReader &)


static void _init_ctor_QCborStreamReader_2999 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("arg1");
  decl->add_arg<const QCborStreamReader & > (argspec_0);
  decl->set_return_new<QCborStreamReader> ();
}

static void _call_ctor_QCborStreamReader_2999 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborStreamReader &arg1 = gsi::arg_reader<const QCborStreamReader & >() (args, heap);
  ret.write<QCborStreamReader *> (new QCborStreamReader (arg1));
}


// void QCborStreamReader::addData(const QByteArray &data)


static void _init_f_addData_2309 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("data");
  decl->add_arg<const QByteArray & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_addData_2309 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QByteArray &arg1 = gsi::arg_reader<const QByteArray & >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QCborStreamReader *)cls)->addData (arg1);
}


// void QCborStreamReader::addData(const char *data, qsizetype len)


static void _init_f_addData_3065 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("data");
  decl->add_arg<const char * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("len");
  decl->add_arg<qsizetype > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_addData_3065 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const char *arg1 = gsi::arg_reader<const char * >() (args, heap);
  qsizetype arg2 = gsi::arg_reader<qsizetype >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QCborStreamReader *)cls)->addData (arg1, arg2);
}


// void QCborStreamReader::addData(const quint8 *data, qsizetype len)


static void _init_f_addData_3268 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("data");
  decl->add_arg<const quint8 * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("len");
  decl->add_arg<qsizetype > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_addData_3268 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const quint8 *arg1 = gsi::arg_reader<const quint8 * >() (args, heap);
  qsizetype arg2 = gsi::arg_reader<qsizetype >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QCborStreamReader *)cls)->addData (arg1, arg2);
}


// void QCborStreamReader::clear()


static void _init_f_clear_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<void > ();
}

static void _call_f_clear_0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QCborStreamReader *)cls)->clear ();
}


// int QCborStreamReader::containerDepth()


static void _init_f_containerDepth_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<int > ();
}

static void _call_f_containerDepth_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<int > ((int)((QCborStreamReader *)cls)->containerDepth ());
}


// qint64 QCborStreamReader::currentOffset()


static void _init_f_currentOffset_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qint64 > ();
}

static void _call_f_currentOffset_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<qint64 > ((qint64)((QCborStreamReader *)cls)->currentOffset ());
}


// qsizetype QCborStreamReader::currentStringChunkSize()


static void _init_f_currentStringChunkSize_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qsizetype > ();
}

static void _call_f_currentStringChunkSize_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<qsizetype > ((qsizetype)((QCborStreamReader *)cls)->currentStringChunkSize ());
}


// QIODevice *QCborStreamReader::device()


static void _init_f_device_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QIODevice * > ();
}

static void _call_f_device_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QIODevice * > ((QIODevice *)((QCborStreamReader *)cls)->device ());
}


// bool QCborStreamReader::enterContainer()


static void _init_f_enterContainer_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_enterContainer_0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->enterContainer ());
}


// bool QCborStreamReader::hasNext()


static void _init_f_hasNext_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_hasNext_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->hasNext ());
}


// bool QCborStreamReader::isArray()


static void _init_f_isArray_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isArray_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isArray ());
}


// bool QCborStreamReader::isBool()


static void _init_f_isBool_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isBool_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isBool ());
}


// bool QCborStreamReader::isByteArray()


static void _init_f_isByteArray_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isByteArray_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isByteArray ());
}


// bool QCborStreamReader::isContainer()


static void _init_f_isContainer_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isContainer_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isContainer ());
}


// bool QCborStreamReader::isDouble()


static void _init_f_isDouble_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isDouble_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isDouble ());
}


// bool QCborStreamReader::isFalse()


static void _init_f_isFalse_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isFalse_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isFalse ());
}


// bool QCborStreamReader::isFloat()


static void _init_f_isFloat_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isFloat_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isFloat ());
}


// bool QCborStreamReader::isFloat16()


static void _init_f_isFloat16_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isFloat16_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isFloat16 ());
}


// bool QCborStreamReader::isInteger()


static void _init_f_isInteger_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isInteger_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isInteger ());
}


// bool QCborStreamReader::isInvalid()


static void _init_f_isInvalid_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isInvalid_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isInvalid ());
}


// bool QCborStreamReader::isLengthKnown()


static void _init_f_isLengthKnown_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isLengthKnown_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isLengthKnown ());
}


// bool QCborStreamReader::isMap()


static void _init_f_isMap_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isMap_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isMap ());
}


// bool QCborStreamReader::isNegativeInteger()


static void _init_f_isNegativeInteger_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isNegativeInteger_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isNegativeInteger ());
}


// bool QCborStreamReader::isNull()


static void _init_f_isNull_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isNull_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isNull ());
}


// bool QCborStreamReader::isSimpleType()


static void _init_f_isSimpleType_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isSimpleType_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isSimpleType ());
}


// bool QCborStreamReader::isSimpleType(QCborSimpleType st)


static void _init_f_isSimpleType_c1943 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("st");
  decl->add_arg<const qt_gsi::Converter<QCborSimpleType>::target_type & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_isSimpleType_c1943 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const qt_gsi::Converter<QCborSimpleType>::target_type & arg1 = gsi::arg_reader<const qt_gsi::Converter<QCborSimpleType>::target_type & >() (args, heap);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isSimpleType (qt_gsi::QtToCppAdaptor<QCborSimpleType>(arg1).cref()));
}


// bool QCborStreamReader::isString()


static void _init_f_isString_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isString_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isString ());
}


// bool QCborStreamReader::isTag()


static void _init_f_isTag_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isTag_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isTag ());
}


// bool QCborStreamReader::isTrue()


static void _init_f_isTrue_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isTrue_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isTrue ());
}


// bool QCborStreamReader::isUndefined()


static void _init_f_isUndefined_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isUndefined_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isUndefined ());
}


// bool QCborStreamReader::isUnsignedInteger()


static void _init_f_isUnsignedInteger_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isUnsignedInteger_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isUnsignedInteger ());
}


// bool QCborStreamReader::isValid()


static void _init_f_isValid_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isValid_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->isValid ());
}


// QCborError QCborStreamReader::lastError()


static void _init_f_lastError_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QCborError > ();
}

static void _call_f_lastError_0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QCborError > ((QCborError)((QCborStreamReader *)cls)->lastError ());
}


// bool QCborStreamReader::leaveContainer()


static void _init_f_leaveContainer_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_leaveContainer_0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->leaveContainer ());
}


// quint64 QCborStreamReader::length()


static void _init_f_length_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<quint64 > ();
}

static void _call_f_length_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<quint64 > ((quint64)((QCborStreamReader *)cls)->length ());
}


// bool QCborStreamReader::next(int maxRecursion)


static void _init_f_next_767 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("maxRecursion", true, "10000");
  decl->add_arg<int > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_next_767 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  int arg1 = args ? gsi::arg_reader<int >() (args, heap) : gsi::arg_maker<int >() (10000, heap);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->next (arg1));
}


// QCborStreamReader &QCborStreamReader::operator=(const QCborStreamReader &)


static void _init_f_operator_eq__2999 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("arg1");
  decl->add_arg<const QCborStreamReader & > (argspec_0);
  decl->set_return<QCborStreamReader & > ();
}

static void _call_f_operator_eq__2999 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborStreamReader &arg1 = gsi::arg_reader<const QCborStreamReader & >() (args, heap);
  ret.write<QCborStreamReader & > ((QCborStreamReader &)((QCborStreamReader *)cls)->operator= (arg1));
}


// QCborStreamReader::Type QCborStreamReader::parentContainerType()


static void _init_f_parentContainerType_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<QCborStreamReader::Type>::target_type > ();
}

static void _call_f_parentContainerType_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<qt_gsi::Converter<QCborStreamReader::Type>::target_type > ((qt_gsi::Converter<QCborStreamReader::Type>::target_type)qt_gsi::CppToQtAdaptor<QCborStreamReader::Type>(((QCborStreamReader *)cls)->parentContainerType ()));
}


// QCborStreamReader::StringResult<QByteArray> QCborStreamReader::readByteArray()


static void _init_f_readByteArray_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QCborStreamReader::StringResult<QByteArray> > ();
}

static void _call_f_readByteArray_0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QCborStreamReader::StringResult<QByteArray> > ((QCborStreamReader::StringResult<QByteArray>)((QCborStreamReader *)cls)->readByteArray ());
}


// QCborStreamReader::StringResult<QString> QCborStreamReader::readString()


static void _init_f_readString_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QCborStreamReader::StringResult<QString> > ();
}

static void _call_f_readString_0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QCborStreamReader::StringResult<QString> > ((QCborStreamReader::StringResult<QString>)((QCborStreamReader *)cls)->readString ());
}


// QCborStreamReader::StringResult<qsizetype> QCborStreamReader::readStringChunk(char *ptr, qsizetype maxlen)


static void _init_f_readStringChunk_2370 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("ptr");
  decl->add_arg<char * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("maxlen");
  decl->add_arg<qsizetype > (argspec_1);
  decl->set_return<QCborStreamReader::StringResult<qsizetype> > ();
}

static void _call_f_readStringChunk_2370 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  char *arg1 = gsi::arg_reader<char * >() (args, heap);
  qsizetype arg2 = gsi::arg_reader<qsizetype >() (args, heap);
  ret.write<QCborStreamReader::StringResult<qsizetype> > ((QCborStreamReader::StringResult<qsizetype>)((QCborStreamReader *)cls)->readStringChunk (arg1, arg2));
}


// void QCborStreamReader::reparse()


static void _init_f_reparse_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<void > ();
}

static void _call_f_reparse_0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QCborStreamReader *)cls)->reparse ();
}


// void QCborStreamReader::reset()


static void _init_f_reset_0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<void > ();
}

static void _call_f_reset_0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QCborStreamReader *)cls)->reset ();
}


// void QCborStreamReader::setDevice(QIODevice *device)


static void _init_f_setDevice_1447 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("device");
  decl->add_arg<QIODevice * > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_setDevice_1447 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QIODevice *arg1 = gsi::arg_reader<QIODevice * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QCborStreamReader *)cls)->setDevice (arg1);
}


// bool QCborStreamReader::toBool()


static void _init_f_toBool_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_toBool_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborStreamReader *)cls)->toBool ());
}


// double QCborStreamReader::toDouble()


static void _init_f_toDouble_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<double > ();
}

static void _call_f_toDouble_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<double > ((double)((QCborStreamReader *)cls)->toDouble ());
}


// float QCborStreamReader::toFloat()


static void _init_f_toFloat_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<float > ();
}

static void _call_f_toFloat_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<float > ((float)((QCborStreamReader *)cls)->toFloat ());
}


// qfloat16 QCborStreamReader::toFloat16()


static void _init_f_toFloat16_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qfloat16 > ();
}

static void _call_f_toFloat16_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<qfloat16 > ((qfloat16)((QCborStreamReader *)cls)->toFloat16 ());
}


// qint64 QCborStreamReader::toInteger()


static void _init_f_toInteger_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qint64 > ();
}

static void _call_f_toInteger_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<qint64 > ((qint64)((QCborStreamReader *)cls)->toInteger ());
}


// QCborNegativeInteger QCborStreamReader::toNegativeInteger()


static void _init_f_toNegativeInteger_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<QCborNegativeInteger>::target_type > ();
}

static void _call_f_toNegativeInteger_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<qt_gsi::Converter<QCborNegativeInteger>::target_type > ((qt_gsi::Converter<QCborNegativeInteger>::target_type)qt_gsi::CppToQtAdaptor<QCborNegativeInteger>(((QCborStreamReader *)cls)->toNegativeInteger ()));
}


// QCborSimpleType QCborStreamReader::toSimpleType()


static void _init_f_toSimpleType_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<QCborSimpleType>::target_type > ();
}

static void _call_f_toSimpleType_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<qt_gsi::Converter<QCborSimpleType>::target_type > ((qt_gsi::Converter<QCborSimpleType>::target_type)qt_gsi::CppToQtAdaptor<QCborSimpleType>(((QCborStreamReader *)cls)->toSimpleType ()));
}


// QCborTag QCborStreamReader::toTag()


static void _init_f_toTag_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<QCborTag>::target_type > ();
}

static void _call_f_toTag_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<qt_gsi::Converter<QCborTag>::target_type > ((qt_gsi::Converter<QCborTag>::target_type)qt_gsi::CppToQtAdaptor<QCborTag>(((QCborStreamReader *)cls)->toTag ()));
}


// quint64 QCborStreamReader::toUnsignedInteger()


static void _init_f_toUnsignedInteger_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<quint64 > ();
}

static void _call_f_toUnsignedInteger_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<quint64 > ((quint64)((QCborStreamReader *)cls)->toUnsignedInteger ());
}


// QCborStreamReader::Type QCborStreamReader::type()


static void _init_f_type_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<QCborStreamReader::Type>::target_type > ();
}

static void _call_f_type_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<qt_gsi::Converter<QCborStreamReader::Type>::target_type > ((qt_gsi::Converter<QCborStreamReader::Type>::target_type)qt_gsi::CppToQtAdaptor<QCborStreamReader::Type>(((QCborStreamReader *)cls)->type ()));
}



namespace gsi
{

static gsi::Methods methods_QCborStreamReader () {
  gsi::Methods methods;
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborStreamReader::QCborStreamReader()\nThis method creates an object of class QCborStreamReader.", &_init_ctor_QCborStreamReader_0, &_call_ctor_QCborStreamReader_0);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborStreamReader::QCborStreamReader(const char *data, qsizetype len)\nThis method creates an object of class QCborStreamReader.", &_init_ctor_QCborStreamReader_3065, &_call_ctor_QCborStreamReader_3065);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborStreamReader::QCborStreamReader(const quint8 *data, qsizetype len)\nThis method creates an object of class QCborStreamReader.", &_init_ctor_QCborStreamReader_3268, &_call_ctor_QCborStreamReader_3268);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborStreamReader::QCborStreamReader(const QByteArray &data)\nThis method creates an object of class QCborStreamReader.", &_init_ctor_QCborStreamReader_2309, &_call_ctor_QCborStreamReader_2309);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborStreamReader::QCborStreamReader(QIODevice *device)\nThis method creates an object of class QCborStreamReader.", &_init_ctor_QCborStreamReader_1447, &_call_ctor_QCborStreamReader_1447);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborStreamReader::QCborStreamReader(const QCborStreamReader &)\nThis method creates an object of class QCborStreamReader.", &_init_ctor_QCborStreamReader_2999, &_call_ctor_QCborStreamReader_2999);
  methods += new qt_gsi::GenericMethod ("addData", "@brief Method void QCborStreamReader::addData(const QByteArray &data)\n", false, &_init_f_addData_2309, &_call_f_addData_2309);
  methods += new qt_gsi::GenericMethod ("addData", "@brief Method void QCborStreamReader::addData(const char *data, qsizetype len)\n", false, &_init_f_addData_3065, &_call_f_addData_3065);
  methods += new qt_gsi::GenericMethod ("addData", "@brief Method void QCborStreamReader::addData(const quint8 *data, qsizetype len)\n", false, &_init_f_addData_3268, &_call_f_addData_3268);
  methods += new qt_gsi::GenericMethod ("clear", "@brief Method void QCborStreamReader::clear()\n", false, &_init_f_clear_0, &_call_f_clear_0);
  methods += new qt_gsi::GenericMethod ("containerDepth", "@brief Method int QCborStreamReader::containerDepth()\n", true, &_init_f_containerDepth_c0, &_call_f_containerDepth_c0);
  methods += new qt_gsi::GenericMethod ("currentOffset", "@brief Method qint64 QCborStreamReader::currentOffset()\n", true, &_init_f_currentOffset_c0, &_call_f_currentOffset_c0);
  methods += new qt_gsi::GenericMethod ("currentStringChunkSize", "@brief Method qsizetype QCborStreamReader::currentStringChunkSize()\n", true, &_init_f_currentStringChunkSize_c0, &_call_f_currentStringChunkSize_c0);
  methods += new qt_gsi::GenericMethod ("device", "@brief Method QIODevice *QCborStreamReader::device()\n", true, &_init_f_device_c0, &_call_f_device_c0);
  methods += new qt_gsi::GenericMethod ("enterContainer", "@brief Method bool QCborStreamReader::enterContainer()\n", false, &_init_f_enterContainer_0, &_call_f_enterContainer_0);
  methods += new qt_gsi::GenericMethod ("hasNext", "@brief Method bool QCborStreamReader::hasNext()\n", true, &_init_f_hasNext_c0, &_call_f_hasNext_c0);
  methods += new qt_gsi::GenericMethod ("isArray?", "@brief Method bool QCborStreamReader::isArray()\n", true, &_init_f_isArray_c0, &_call_f_isArray_c0);
  methods += new qt_gsi::GenericMethod ("isBool?", "@brief Method bool QCborStreamReader::isBool()\n", true, &_init_f_isBool_c0, &_call_f_isBool_c0);
  methods += new qt_gsi::GenericMethod ("isByteArray?", "@brief Method bool QCborStreamReader::isByteArray()\n", true, &_init_f_isByteArray_c0, &_call_f_isByteArray_c0);
  methods += new qt_gsi::GenericMethod ("isContainer?", "@brief Method bool QCborStreamReader::isContainer()\n", true, &_init_f_isContainer_c0, &_call_f_isContainer_c0);
  methods += new qt_gsi::GenericMethod ("isDouble?", "@brief Method bool QCborStreamReader::isDouble()\n", true, &_init_f_isDouble_c0, &_call_f_isDouble_c0);
  methods += new qt_gsi::GenericMethod ("isFalse?", "@brief Method bool QCborStreamReader::isFalse()\n", true, &_init_f_isFalse_c0, &_call_f_isFalse_c0);
  methods += new qt_gsi::GenericMethod ("isFloat?", "@brief Method bool QCborStreamReader::isFloat()\n", true, &_init_f_isFloat_c0, &_call_f_isFloat_c0);
  methods += new qt_gsi::GenericMethod ("isFloat16?", "@brief Method bool QCborStreamReader::isFloat16()\n", true, &_init_f_isFloat16_c0, &_call_f_isFloat16_c0);
  methods += new qt_gsi::GenericMethod ("isInteger?", "@brief Method bool QCborStreamReader::isInteger()\n", true, &_init_f_isInteger_c0, &_call_f_isInteger_c0);
  methods += new qt_gsi::GenericMethod ("isInvalid?", "@brief Method bool QCborStreamReader::isInvalid()\n", true, &_init_f_isInvalid_c0, &_call_f_isInvalid_c0);
  methods += new qt_gsi::GenericMethod ("isLengthKnown?", "@brief Method bool QCborStreamReader::isLengthKnown()\n", true, &_init_f_isLengthKnown_c0, &_call_f_isLengthKnown_c0);
  methods += new qt_gsi::GenericMethod ("isMap?", "@brief Method bool QCborStreamReader::isMap()\n", true, &_init_f_isMap_c0, &_call_f_isMap_c0);
  methods += new qt_gsi::GenericMethod ("isNegativeInteger?", "@brief Method bool QCborStreamReader::isNegativeInteger()\n", true, &_init_f_isNegativeInteger_c0, &_call_f_isNegativeInteger_c0);
  methods += new qt_gsi::GenericMethod ("isNull?", "@brief Method bool QCborStreamReader::isNull()\n", true, &_init_f_isNull_c0, &_call_f_isNull_c0);
  methods += new qt_gsi::GenericMethod ("isSimpleType?", "@brief Method bool QCborStreamReader::isSimpleType()\n", true, &_init_f_isSimpleType_c0, &_call_f_isSimpleType_c0);
  methods += new qt_gsi::GenericMethod ("isSimpleType?", "@brief Method bool QCborStreamReader::isSimpleType(QCborSimpleType st)\n", true, &_init_f_isSimpleType_c1943, &_call_f_isSimpleType_c1943);
  methods += new qt_gsi::GenericMethod ("isString?", "@brief Method bool QCborStreamReader::isString()\n", true, &_init_f_isString_c0, &_call_f_isString_c0);
  methods += new qt_gsi::GenericMethod ("isTag?", "@brief Method bool QCborStreamReader::isTag()\n", true, &_init_f_isTag_c0, &_call_f_isTag_c0);
  methods += new qt_gsi::GenericMethod ("isTrue?", "@brief Method bool QCborStreamReader::isTrue()\n", true, &_init_f_isTrue_c0, &_call_f_isTrue_c0);
  methods += new qt_gsi::GenericMethod ("isUndefined?", "@brief Method bool QCborStreamReader::isUndefined()\n", true, &_init_f_isUndefined_c0, &_call_f_isUndefined_c0);
  methods += new qt_gsi::GenericMethod ("isUnsignedInteger?", "@brief Method bool QCborStreamReader::isUnsignedInteger()\n", true, &_init_f_isUnsignedInteger_c0, &_call_f_isUnsignedInteger_c0);
  methods += new qt_gsi::GenericMethod ("isValid?", "@brief Method bool QCborStreamReader::isValid()\n", true, &_init_f_isValid_c0, &_call_f_isValid_c0);
  methods += new qt_gsi::GenericMethod ("lastError", "@brief Method QCborError QCborStreamReader::lastError()\n", false, &_init_f_lastError_0, &_call_f_lastError_0);
  methods += new qt_gsi::GenericMethod ("leaveContainer", "@brief Method bool QCborStreamReader::leaveContainer()\n", false, &_init_f_leaveContainer_0, &_call_f_leaveContainer_0);
  methods += new qt_gsi::GenericMethod ("length", "@brief Method quint64 QCborStreamReader::length()\n", true, &_init_f_length_c0, &_call_f_length_c0);
  methods += new qt_gsi::GenericMethod ("next", "@brief Method bool QCborStreamReader::next(int maxRecursion)\n", false, &_init_f_next_767, &_call_f_next_767);
  methods += new qt_gsi::GenericMethod ("assign", "@brief Method QCborStreamReader &QCborStreamReader::operator=(const QCborStreamReader &)\n", false, &_init_f_operator_eq__2999, &_call_f_operator_eq__2999);
  methods += new qt_gsi::GenericMethod ("parentContainerType", "@brief Method QCborStreamReader::Type QCborStreamReader::parentContainerType()\n", true, &_init_f_parentContainerType_c0, &_call_f_parentContainerType_c0);
  methods += new qt_gsi::GenericMethod ("readByteArray", "@brief Method QCborStreamReader::StringResult<QByteArray> QCborStreamReader::readByteArray()\n", false, &_init_f_readByteArray_0, &_call_f_readByteArray_0);
  methods += new qt_gsi::GenericMethod ("readString", "@brief Method QCborStreamReader::StringResult<QString> QCborStreamReader::readString()\n", false, &_init_f_readString_0, &_call_f_readString_0);
  methods += new qt_gsi::GenericMethod ("readStringChunk", "@brief Method QCborStreamReader::StringResult<qsizetype> QCborStreamReader::readStringChunk(char *ptr, qsizetype maxlen)\n", false, &_init_f_readStringChunk_2370, &_call_f_readStringChunk_2370);
  methods += new qt_gsi::GenericMethod ("reparse", "@brief Method void QCborStreamReader::reparse()\n", false, &_init_f_reparse_0, &_call_f_reparse_0);
  methods += new qt_gsi::GenericMethod ("reset", "@brief Method void QCborStreamReader::reset()\n", false, &_init_f_reset_0, &_call_f_reset_0);
  methods += new qt_gsi::GenericMethod ("setDevice", "@brief Method void QCborStreamReader::setDevice(QIODevice *device)\n", false, &_init_f_setDevice_1447, &_call_f_setDevice_1447);
  methods += new qt_gsi::GenericMethod ("toBool", "@brief Method bool QCborStreamReader::toBool()\n", true, &_init_f_toBool_c0, &_call_f_toBool_c0);
  methods += new qt_gsi::GenericMethod ("toDouble", "@brief Method double QCborStreamReader::toDouble()\n", true, &_init_f_toDouble_c0, &_call_f_toDouble_c0);
  methods += new qt_gsi::GenericMethod ("toFloat", "@brief Method float QCborStreamReader::toFloat()\n", true, &_init_f_toFloat_c0, &_call_f_toFloat_c0);
  methods += new qt_gsi::GenericMethod ("toFloat16", "@brief Method qfloat16 QCborStreamReader::toFloat16()\n", true, &_init_f_toFloat16_c0, &_call_f_toFloat16_c0);
  methods += new qt_gsi::GenericMethod ("toInteger", "@brief Method qint64 QCborStreamReader::toInteger()\n", true, &_init_f_toInteger_c0, &_call_f_toInteger_c0);
  methods += new qt_gsi::GenericMethod ("toNegativeInteger", "@brief Method QCborNegativeInteger QCborStreamReader::toNegativeInteger()\n", true, &_init_f_toNegativeInteger_c0, &_call_f_toNegativeInteger_c0);
  methods += new qt_gsi::GenericMethod ("toSimpleType", "@brief Method QCborSimpleType QCborStreamReader::toSimpleType()\n", true, &_init_f_toSimpleType_c0, &_call_f_toSimpleType_c0);
  methods += new qt_gsi::GenericMethod ("toTag", "@brief Method QCborTag QCborStreamReader::toTag()\n", true, &_init_f_toTag_c0, &_call_f_toTag_c0);
  methods += new qt_gsi::GenericMethod ("toUnsignedInteger", "@brief Method quint64 QCborStreamReader::toUnsignedInteger()\n", true, &_init_f_toUnsignedInteger_c0, &_call_f_toUnsignedInteger_c0);
  methods += new qt_gsi::GenericMethod ("type", "@brief Method QCborStreamReader::Type QCborStreamReader::type()\n", true, &_init_f_type_c0, &_call_f_type_c0);
  return methods;
}

gsi::Class<QCborStreamReader> decl_QCborStreamReader ("QtCore", "QCborStreamReader",
  methods_QCborStreamReader (),
  "@qt\n@brief Binding of QCborStreamReader");


GSI_QTCORE_PUBLIC gsi::Class<QCborStreamReader> &qtdecl_QCborStreamReader () { return decl_QCborStreamReader; }

}


//  Implementation of the enum wrapper class for QCborStreamReader::Type
namespace qt_gsi
{

static gsi::Enum<QCborStreamReader::Type> decl_QCborStreamReader_Type_Enum ("QtCore", "QCborStreamReader_Type",
    gsi::enum_const ("UnsignedInteger", QCborStreamReader::UnsignedInteger, "@brief Enum constant QCborStreamReader::UnsignedInteger") +
    gsi::enum_const ("NegativeInteger", QCborStreamReader::NegativeInteger, "@brief Enum constant QCborStreamReader::NegativeInteger") +
    gsi::enum_const ("ByteString", QCborStreamReader::ByteString, "@brief Enum constant QCborStreamReader::ByteString") +
    gsi::enum_const ("ByteArray", QCborStreamReader::ByteArray, "@brief Enum constant QCborStreamReader::ByteArray") +
    gsi::enum_const ("TextString", QCborStreamReader::TextString, "@brief Enum constant QCborStreamReader::TextString") +
    gsi::enum_const ("String", QCborStreamReader::String, "@brief Enum constant QCborStreamReader::String") +
    gsi::enum_const ("Array", QCborStreamReader::Array, "@brief Enum constant QCborStreamReader::Array") +
    gsi::enum_const ("Map", QCborStreamReader::Map, "@brief Enum constant QCborStreamReader::Map") +
    gsi::enum_const ("Tag", QCborStreamReader::Tag, "@brief Enum constant QCborStreamReader::Tag") +
    gsi::enum_const ("SimpleType", QCborStreamReader::SimpleType, "@brief Enum constant QCborStreamReader::SimpleType") +
    gsi::enum_const ("HalfFloat", QCborStreamReader::HalfFloat, "@brief Enum constant QCborStreamReader::HalfFloat") +
    gsi::enum_const ("Float16", QCborStreamReader::Float16, "@brief Enum constant QCborStreamReader::Float16") +
    gsi::enum_const ("Float", QCborStreamReader::Float, "@brief Enum constant QCborStreamReader::Float") +
    gsi::enum_const ("Double", QCborStreamReader::Double, "@brief Enum constant QCborStreamReader::Double") +
    gsi::enum_const ("Invalid", QCborStreamReader::Invalid, "@brief Enum constant QCborStreamReader::Invalid"),
  "@qt\n@brief This class represents the QCborStreamReader::Type enum");

static gsi::QFlagsClass<QCborStreamReader::Type > decl_QCborStreamReader_Type_Enums ("QtCore", "QCborStreamReader_QFlags_Type",
  "@qt\n@brief This class represents the QFlags<QCborStreamReader::Type> flag set");

//  Inject the declarations into the parent
static gsi::ClassExt<QCborStreamReader> inject_QCborStreamReader_Type_Enum_in_parent (decl_QCborStreamReader_Type_Enum.defs ());
static gsi::ClassExt<QCborStreamReader> decl_QCborStreamReader_Type_Enum_as_child (decl_QCborStreamReader_Type_Enum, "Type");
static gsi::ClassExt<QCborStreamReader> decl_QCborStreamReader_Type_Enums_as_child (decl_QCborStreamReader_Type_Enums, "QFlags_Type");

}

