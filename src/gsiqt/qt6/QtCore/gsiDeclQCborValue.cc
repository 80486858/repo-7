
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2021 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQCborValue.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include <QCborValue>
#include <QCborArray>
#include <QCborMap>
#include <QCborParserError>
#include <QCborStreamReader>
#include <QCborStreamWriter>
#include <QCborValueRef>
#include <QDateTime>
#include <QJsonValue>
#include <QRegularExpression>
#include <QStringView>
#include <QUrl>
#include "gsiQt.h"
#include "gsiQtCoreCommon.h"
#include "gsiDeclQtCoreTypeTraits.h"
#include <memory>

// -----------------------------------------------------------------------
// class QCborValue

//  Constructor QCborValue::QCborValue()


static void _init_ctor_QCborValue_0 (qt_gsi::GenericStaticMethod *decl)
{
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_0 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QCborValue *> (new QCborValue ());
}


//  Constructor QCborValue::QCborValue(QCborValue::Type t_)


static void _init_ctor_QCborValue_1950 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("t_");
  decl->add_arg<const qt_gsi::Converter<QCborValue::Type>::target_type & > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_1950 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const qt_gsi::Converter<QCborValue::Type>::target_type & arg1 = gsi::arg_reader<const qt_gsi::Converter<QCborValue::Type>::target_type & >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (qt_gsi::QtToCppAdaptor<QCborValue::Type>(arg1).cref()));
}


//  Constructor QCborValue::QCborValue(std::nullptr_t)


static void _init_ctor_QCborValue_1879 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("arg1");
  decl->add_arg<std::nullptr_t > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_1879 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  std::nullptr_t arg1 = gsi::arg_reader<std::nullptr_t >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(bool b_)


static void _init_ctor_QCborValue_864 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("b_");
  decl->add_arg<bool > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_864 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  bool arg1 = gsi::arg_reader<bool >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(int i)


static void _init_ctor_QCborValue_767 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("i");
  decl->add_arg<int > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_767 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  int arg1 = gsi::arg_reader<int >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(unsigned int u)


static void _init_ctor_QCborValue_1772 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("u");
  decl->add_arg<unsigned int > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_1772 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  unsigned int arg1 = gsi::arg_reader<unsigned int >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(qint64 i)


static void _init_ctor_QCborValue_986 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("i");
  decl->add_arg<qint64 > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_986 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  qint64 arg1 = gsi::arg_reader<qint64 >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(double v)


static void _init_ctor_QCborValue_1071 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("v");
  decl->add_arg<double > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_1071 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  double arg1 = gsi::arg_reader<double >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(QCborSimpleType st)


static void _init_ctor_QCborValue_1943 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("st");
  decl->add_arg<const qt_gsi::Converter<QCborSimpleType>::target_type & > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_1943 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const qt_gsi::Converter<QCborSimpleType>::target_type & arg1 = gsi::arg_reader<const qt_gsi::Converter<QCborSimpleType>::target_type & >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (qt_gsi::QtToCppAdaptor<QCborSimpleType>(arg1).cref()));
}


//  Constructor QCborValue::QCborValue(const QByteArray &ba)


static void _init_ctor_QCborValue_2309 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("ba");
  decl->add_arg<const QByteArray & > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_2309 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QByteArray &arg1 = gsi::arg_reader<const QByteArray & >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(const QString &s)


static void _init_ctor_QCborValue_2025 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("s");
  decl->add_arg<const QString & > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_2025 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QString &arg1 = gsi::arg_reader<const QString & >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(QStringView s)


static void _init_ctor_QCborValue_1559 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("s");
  decl->add_arg<QStringView > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_1559 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QStringView arg1 = gsi::arg_reader<QStringView >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(QLatin1String s)


static void _init_ctor_QCborValue_1701 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("s");
  decl->add_arg<QLatin1String > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_1701 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QLatin1String arg1 = gsi::arg_reader<QLatin1String >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(const char *s)


static void _init_ctor_QCborValue_1731 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("s");
  decl->add_arg<const char * > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_1731 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const char *arg1 = gsi::arg_reader<const char * >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(const QCborArray &a)


static void _init_ctor_QCborValue_2295 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("a");
  decl->add_arg<const QCborArray & > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_2295 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborArray &arg1 = gsi::arg_reader<const QCborArray & >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(const QCborMap &m)


static void _init_ctor_QCborValue_2070 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("m");
  decl->add_arg<const QCborMap & > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_2070 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborMap &arg1 = gsi::arg_reader<const QCborMap & >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(QCborTag tag, const QCborValue &taggedValue)


static void _init_ctor_QCborValue_3376 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("tag");
  decl->add_arg<const qt_gsi::Converter<QCborTag>::target_type & > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("taggedValue", true, "QCborValue()");
  decl->add_arg<const QCborValue & > (argspec_1);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_3376 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const qt_gsi::Converter<QCborTag>::target_type & arg1 = gsi::arg_reader<const qt_gsi::Converter<QCborTag>::target_type & >() (args, heap);
  const QCborValue &arg2 = args ? gsi::arg_reader<const QCborValue & >() (args, heap) : gsi::arg_maker<const QCborValue & >() (QCborValue(), heap);
  ret.write<QCborValue *> (new QCborValue (qt_gsi::QtToCppAdaptor<QCborTag>(arg1).cref(), arg2));
}


//  Constructor QCborValue::QCborValue(QCborKnownTags t_, const QCborValue &tv)


static void _init_ctor_QCborValue_4016 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("t_");
  decl->add_arg<const qt_gsi::Converter<QCborKnownTags>::target_type & > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("tv", true, "QCborValue()");
  decl->add_arg<const QCborValue & > (argspec_1);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_4016 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const qt_gsi::Converter<QCborKnownTags>::target_type & arg1 = gsi::arg_reader<const qt_gsi::Converter<QCborKnownTags>::target_type & >() (args, heap);
  const QCborValue &arg2 = args ? gsi::arg_reader<const QCborValue & >() (args, heap) : gsi::arg_maker<const QCborValue & >() (QCborValue(), heap);
  ret.write<QCborValue *> (new QCborValue (qt_gsi::QtToCppAdaptor<QCborKnownTags>(arg1).cref(), arg2));
}


//  Constructor QCborValue::QCborValue(const QDateTime &dt)


static void _init_ctor_QCborValue_2175 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("dt");
  decl->add_arg<const QDateTime & > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_2175 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QDateTime &arg1 = gsi::arg_reader<const QDateTime & >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(const QUrl &url)


static void _init_ctor_QCborValue_1701u1 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("url");
  decl->add_arg<const QUrl & > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_1701u1 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QUrl &arg1 = gsi::arg_reader<const QUrl & >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(const QRegularExpression &rx)


static void _init_ctor_QCborValue_3188 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("rx");
  decl->add_arg<const QRegularExpression & > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_3188 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QRegularExpression &arg1 = gsi::arg_reader<const QRegularExpression & >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(const QUuid &uuid)


static void _init_ctor_QCborValue_1801 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("uuid");
  decl->add_arg<const QUuid & > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_1801 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QUuid &arg1 = gsi::arg_reader<const QUuid & >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(const void *)


static void _init_ctor_QCborValue_1751 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("arg1");
  decl->add_arg<const void * > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_1751 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const void *arg1 = gsi::arg_reader<const void * >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


//  Constructor QCborValue::QCborValue(const QCborValue &other)


static void _init_ctor_QCborValue_2293 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QCborValue & > (argspec_0);
  decl->set_return_new<QCborValue> ();
}

static void _call_ctor_QCborValue_2293 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborValue &arg1 = gsi::arg_reader<const QCborValue & >() (args, heap);
  ret.write<QCborValue *> (new QCborValue (arg1));
}


// int QCborValue::compare(const QCborValue &other)


static void _init_f_compare_c2293 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QCborValue & > (argspec_0);
  decl->set_return<int > ();
}

static void _call_f_compare_c2293 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborValue &arg1 = gsi::arg_reader<const QCborValue & >() (args, heap);
  ret.write<int > ((int)((QCborValue *)cls)->compare (arg1));
}


// bool QCborValue::isArray()


static void _init_f_isArray_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isArray_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isArray ());
}


// bool QCborValue::isBool()


static void _init_f_isBool_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isBool_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isBool ());
}


// bool QCborValue::isByteArray()


static void _init_f_isByteArray_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isByteArray_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isByteArray ());
}


// bool QCborValue::isContainer()


static void _init_f_isContainer_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isContainer_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isContainer ());
}


// bool QCborValue::isDateTime()


static void _init_f_isDateTime_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isDateTime_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isDateTime ());
}


// bool QCborValue::isDouble()


static void _init_f_isDouble_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isDouble_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isDouble ());
}


// bool QCborValue::isFalse()


static void _init_f_isFalse_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isFalse_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isFalse ());
}


// bool QCborValue::isInteger()


static void _init_f_isInteger_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isInteger_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isInteger ());
}


// bool QCborValue::isInvalid()


static void _init_f_isInvalid_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isInvalid_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isInvalid ());
}


// bool QCborValue::isMap()


static void _init_f_isMap_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isMap_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isMap ());
}


// bool QCborValue::isNull()


static void _init_f_isNull_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isNull_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isNull ());
}


// bool QCborValue::isRegularExpression()


static void _init_f_isRegularExpression_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isRegularExpression_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isRegularExpression ());
}


// bool QCborValue::isSimpleType()


static void _init_f_isSimpleType_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isSimpleType_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isSimpleType ());
}


// bool QCborValue::isSimpleType(QCborSimpleType st)


static void _init_f_isSimpleType_c1943 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("st");
  decl->add_arg<const qt_gsi::Converter<QCborSimpleType>::target_type & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_isSimpleType_c1943 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const qt_gsi::Converter<QCborSimpleType>::target_type & arg1 = gsi::arg_reader<const qt_gsi::Converter<QCborSimpleType>::target_type & >() (args, heap);
  ret.write<bool > ((bool)((QCborValue *)cls)->isSimpleType (qt_gsi::QtToCppAdaptor<QCborSimpleType>(arg1).cref()));
}


// bool QCborValue::isString()


static void _init_f_isString_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isString_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isString ());
}


// bool QCborValue::isTag()


static void _init_f_isTag_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isTag_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isTag ());
}


// bool QCborValue::isTrue()


static void _init_f_isTrue_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isTrue_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isTrue ());
}


// bool QCborValue::isUndefined()


static void _init_f_isUndefined_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isUndefined_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isUndefined ());
}


// bool QCborValue::isUrl()


static void _init_f_isUrl_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isUrl_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isUrl ());
}


// bool QCborValue::isUuid()


static void _init_f_isUuid_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<bool > ();
}

static void _call_f_isUuid_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<bool > ((bool)((QCborValue *)cls)->isUuid ());
}


// bool QCborValue::operator!=(const QCborValue &other)


static void _init_f_operator_excl__eq__c2293 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QCborValue & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_operator_excl__eq__c2293 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborValue &arg1 = gsi::arg_reader<const QCborValue & >() (args, heap);
  ret.write<bool > ((bool)((QCborValue *)cls)->operator!= (arg1));
}


// bool QCborValue::operator<(const QCborValue &other)


static void _init_f_operator_lt__c2293 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QCborValue & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_operator_lt__c2293 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborValue &arg1 = gsi::arg_reader<const QCborValue & >() (args, heap);
  ret.write<bool > ((bool)((QCborValue *)cls)->operator< (arg1));
}


// QCborValue &QCborValue::operator=(const QCborValue &other)


static void _init_f_operator_eq__2293 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QCborValue & > (argspec_0);
  decl->set_return<QCborValue & > ();
}

static void _call_f_operator_eq__2293 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborValue &arg1 = gsi::arg_reader<const QCborValue & >() (args, heap);
  ret.write<QCborValue & > ((QCborValue &)((QCborValue *)cls)->operator= (arg1));
}


// bool QCborValue::operator==(const QCborValue &other)


static void _init_f_operator_eq__eq__c2293 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<const QCborValue & > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_operator_eq__eq__c2293 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborValue &arg1 = gsi::arg_reader<const QCborValue & >() (args, heap);
  ret.write<bool > ((bool)((QCborValue *)cls)->operator== (arg1));
}


// const QCborValue QCborValue::operator[](const QString &key)


static void _init_f_operator_index__c2025 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("key");
  decl->add_arg<const QString & > (argspec_0);
  decl->set_return<const QCborValue > ();
}

static void _call_f_operator_index__c2025 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QString &arg1 = gsi::arg_reader<const QString & >() (args, heap);
  ret.write<const QCborValue > ((const QCborValue)((QCborValue *)cls)->operator[] (arg1));
}


// const QCborValue QCborValue::operator[](QLatin1String key)


static void _init_f_operator_index__c1701 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("key");
  decl->add_arg<QLatin1String > (argspec_0);
  decl->set_return<const QCborValue > ();
}

static void _call_f_operator_index__c1701 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QLatin1String arg1 = gsi::arg_reader<QLatin1String >() (args, heap);
  ret.write<const QCborValue > ((const QCborValue)((QCborValue *)cls)->operator[] (arg1));
}


// const QCborValue QCborValue::operator[](qint64 key)


static void _init_f_operator_index__c986 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("key");
  decl->add_arg<qint64 > (argspec_0);
  decl->set_return<const QCborValue > ();
}

static void _call_f_operator_index__c986 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  qint64 arg1 = gsi::arg_reader<qint64 >() (args, heap);
  ret.write<const QCborValue > ((const QCborValue)((QCborValue *)cls)->operator[] (arg1));
}


// QCborValueRef QCborValue::operator[](qint64 key)


static void _init_f_operator_index__986 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("key");
  decl->add_arg<qint64 > (argspec_0);
  decl->set_return<QCborValueRef > ();
}

static void _call_f_operator_index__986 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  qint64 arg1 = gsi::arg_reader<qint64 >() (args, heap);
  ret.write<QCborValueRef > ((QCborValueRef)((QCborValue *)cls)->operator[] (arg1));
}


// QCborValueRef QCborValue::operator[](QLatin1String key)


static void _init_f_operator_index__1701 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("key");
  decl->add_arg<QLatin1String > (argspec_0);
  decl->set_return<QCborValueRef > ();
}

static void _call_f_operator_index__1701 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QLatin1String arg1 = gsi::arg_reader<QLatin1String >() (args, heap);
  ret.write<QCborValueRef > ((QCborValueRef)((QCborValue *)cls)->operator[] (arg1));
}


// QCborValueRef QCborValue::operator[](const QString &key)


static void _init_f_operator_index__2025 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("key");
  decl->add_arg<const QString & > (argspec_0);
  decl->set_return<QCborValueRef > ();
}

static void _call_f_operator_index__2025 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QString &arg1 = gsi::arg_reader<const QString & >() (args, heap);
  ret.write<QCborValueRef > ((QCborValueRef)((QCborValue *)cls)->operator[] (arg1));
}


// void QCborValue::swap(QCborValue &other)


static void _init_f_swap_1598 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("other");
  decl->add_arg<QCborValue & > (argspec_0);
  decl->set_return<void > ();
}

static void _call_f_swap_1598 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QCborValue &arg1 = gsi::arg_reader<QCborValue & >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QCborValue *)cls)->swap (arg1);
}


// QCborTag QCborValue::tag(QCborTag defaultValue)


static void _init_f_tag_c1191 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue", true, "QCborTag(-1)");
  decl->add_arg<const qt_gsi::Converter<QCborTag>::target_type & > (argspec_0);
  decl->set_return<qt_gsi::Converter<QCborTag>::target_type > ();
}

static void _call_f_tag_c1191 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const qt_gsi::Converter<QCborTag>::target_type & arg1 = args ? gsi::arg_reader<const qt_gsi::Converter<QCborTag>::target_type & >() (args, heap) : gsi::arg_maker<const qt_gsi::Converter<QCborTag>::target_type & >() (qt_gsi::CppToQtReadAdaptor<QCborTag>(heap, QCborTag(-1)), heap);
  ret.write<qt_gsi::Converter<QCborTag>::target_type > ((qt_gsi::Converter<QCborTag>::target_type)qt_gsi::CppToQtAdaptor<QCborTag>(((QCborValue *)cls)->tag (qt_gsi::QtToCppAdaptor<QCborTag>(arg1).cref())));
}


// QCborValue QCborValue::taggedValue(const QCborValue &defaultValue)


static void _init_f_taggedValue_c2293 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue", true, "QCborValue()");
  decl->add_arg<const QCborValue & > (argspec_0);
  decl->set_return<QCborValue > ();
}

static void _call_f_taggedValue_c2293 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborValue &arg1 = args ? gsi::arg_reader<const QCborValue & >() (args, heap) : gsi::arg_maker<const QCborValue & >() (QCborValue(), heap);
  ret.write<QCborValue > ((QCborValue)((QCborValue *)cls)->taggedValue (arg1));
}


// QCborArray QCborValue::toArray()


static void _init_f_toArray_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QCborArray > ();
}

static void _call_f_toArray_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QCborArray > ((QCborArray)((QCborValue *)cls)->toArray ());
}


// QCborArray QCborValue::toArray(const QCborArray &defaultValue)


static void _init_f_toArray_c2295 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue");
  decl->add_arg<const QCborArray & > (argspec_0);
  decl->set_return<QCborArray > ();
}

static void _call_f_toArray_c2295 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborArray &arg1 = gsi::arg_reader<const QCborArray & >() (args, heap);
  ret.write<QCborArray > ((QCborArray)((QCborValue *)cls)->toArray (arg1));
}


// bool QCborValue::toBool(bool defaultValue)


static void _init_f_toBool_c864 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue", true, "false");
  decl->add_arg<bool > (argspec_0);
  decl->set_return<bool > ();
}

static void _call_f_toBool_c864 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  bool arg1 = args ? gsi::arg_reader<bool >() (args, heap) : gsi::arg_maker<bool >() (false, heap);
  ret.write<bool > ((bool)((QCborValue *)cls)->toBool (arg1));
}


// QByteArray QCborValue::toByteArray(const QByteArray &defaultValue)


static void _init_f_toByteArray_c2309 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue", true, "{}");
  decl->add_arg<const QByteArray & > (argspec_0);
  decl->set_return<QByteArray > ();
}

static void _call_f_toByteArray_c2309 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QByteArray &arg1 = args ? gsi::arg_reader<const QByteArray & >() (args, heap) : gsi::arg_maker<const QByteArray & >() ({}, heap);
  ret.write<QByteArray > ((QByteArray)((QCborValue *)cls)->toByteArray (arg1));
}


// QByteArray QCborValue::toCbor(QFlags<QCborValue::EncodingOption> opt)


static void _init_f_toCbor_c3668 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("opt", true, "QCborValue::NoTransformation");
  decl->add_arg<QFlags<QCborValue::EncodingOption> > (argspec_0);
  decl->set_return<QByteArray > ();
}

static void _call_f_toCbor_c3668 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QFlags<QCborValue::EncodingOption> arg1 = args ? gsi::arg_reader<QFlags<QCborValue::EncodingOption> >() (args, heap) : gsi::arg_maker<QFlags<QCborValue::EncodingOption> >() (QCborValue::NoTransformation, heap);
  ret.write<QByteArray > ((QByteArray)((QCborValue *)cls)->toCbor (arg1));
}


// void QCborValue::toCbor(QCborStreamWriter &writer, QFlags<QCborValue::EncodingOption> opt)


static void _init_f_toCbor_c5906 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("writer");
  decl->add_arg<QCborStreamWriter & > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("opt", true, "QCborValue::NoTransformation");
  decl->add_arg<QFlags<QCborValue::EncodingOption> > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_toCbor_c5906 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QCborStreamWriter &arg1 = gsi::arg_reader<QCborStreamWriter & >() (args, heap);
  QFlags<QCborValue::EncodingOption> arg2 = args ? gsi::arg_reader<QFlags<QCborValue::EncodingOption> >() (args, heap) : gsi::arg_maker<QFlags<QCborValue::EncodingOption> >() (QCborValue::NoTransformation, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QCborValue *)cls)->toCbor (arg1, arg2);
}


// QDateTime QCborValue::toDateTime(const QDateTime &defaultValue)


static void _init_f_toDateTime_c2175 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue", true, "{}");
  decl->add_arg<const QDateTime & > (argspec_0);
  decl->set_return<QDateTime > ();
}

static void _call_f_toDateTime_c2175 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QDateTime &arg1 = args ? gsi::arg_reader<const QDateTime & >() (args, heap) : gsi::arg_maker<const QDateTime & >() ({}, heap);
  ret.write<QDateTime > ((QDateTime)((QCborValue *)cls)->toDateTime (arg1));
}


// QString QCborValue::toDiagnosticNotation(QFlags<QCborValue::DiagnosticNotationOption> opts)


static void _init_f_toDiagnosticNotation_c4734 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("opts", true, "QCborValue::Compact");
  decl->add_arg<QFlags<QCborValue::DiagnosticNotationOption> > (argspec_0);
  decl->set_return<QString > ();
}

static void _call_f_toDiagnosticNotation_c4734 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QFlags<QCborValue::DiagnosticNotationOption> arg1 = args ? gsi::arg_reader<QFlags<QCborValue::DiagnosticNotationOption> >() (args, heap) : gsi::arg_maker<QFlags<QCborValue::DiagnosticNotationOption> >() (QCborValue::Compact, heap);
  ret.write<QString > ((QString)((QCborValue *)cls)->toDiagnosticNotation (arg1));
}


// double QCborValue::toDouble(double defaultValue)


static void _init_f_toDouble_c1071 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue", true, "0");
  decl->add_arg<double > (argspec_0);
  decl->set_return<double > ();
}

static void _call_f_toDouble_c1071 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  double arg1 = args ? gsi::arg_reader<double >() (args, heap) : gsi::arg_maker<double >() (0, heap);
  ret.write<double > ((double)((QCborValue *)cls)->toDouble (arg1));
}


// qint64 QCborValue::toInteger(qint64 defaultValue)


static void _init_f_toInteger_c986 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue", true, "0");
  decl->add_arg<qint64 > (argspec_0);
  decl->set_return<qint64 > ();
}

static void _call_f_toInteger_c986 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  qint64 arg1 = args ? gsi::arg_reader<qint64 >() (args, heap) : gsi::arg_maker<qint64 >() (0, heap);
  ret.write<qint64 > ((qint64)((QCborValue *)cls)->toInteger (arg1));
}


// QJsonValue QCborValue::toJsonValue()


static void _init_f_toJsonValue_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QJsonValue > ();
}

static void _call_f_toJsonValue_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QJsonValue > ((QJsonValue)((QCborValue *)cls)->toJsonValue ());
}


// QCborMap QCborValue::toMap()


static void _init_f_toMap_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QCborMap > ();
}

static void _call_f_toMap_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QCborMap > ((QCborMap)((QCborValue *)cls)->toMap ());
}


// QCborMap QCborValue::toMap(const QCborMap &defaultValue)


static void _init_f_toMap_c2070 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue");
  decl->add_arg<const QCborMap & > (argspec_0);
  decl->set_return<QCborMap > ();
}

static void _call_f_toMap_c2070 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QCborMap &arg1 = gsi::arg_reader<const QCborMap & >() (args, heap);
  ret.write<QCborMap > ((QCborMap)((QCborValue *)cls)->toMap (arg1));
}


// QRegularExpression QCborValue::toRegularExpression(const QRegularExpression &defaultValue)


static void _init_f_toRegularExpression_c3188 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue", true, "{}");
  decl->add_arg<const QRegularExpression & > (argspec_0);
  decl->set_return<QRegularExpression > ();
}

static void _call_f_toRegularExpression_c3188 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QRegularExpression &arg1 = args ? gsi::arg_reader<const QRegularExpression & >() (args, heap) : gsi::arg_maker<const QRegularExpression & >() ({}, heap);
  ret.write<QRegularExpression > ((QRegularExpression)((QCborValue *)cls)->toRegularExpression (arg1));
}


// QCborSimpleType QCborValue::toSimpleType(QCborSimpleType defaultValue)


static void _init_f_toSimpleType_c1943 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue", true, "QCborSimpleType::Undefined");
  decl->add_arg<const qt_gsi::Converter<QCborSimpleType>::target_type & > (argspec_0);
  decl->set_return<qt_gsi::Converter<QCborSimpleType>::target_type > ();
}

static void _call_f_toSimpleType_c1943 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const qt_gsi::Converter<QCborSimpleType>::target_type & arg1 = args ? gsi::arg_reader<const qt_gsi::Converter<QCborSimpleType>::target_type & >() (args, heap) : gsi::arg_maker<const qt_gsi::Converter<QCborSimpleType>::target_type & >() (qt_gsi::CppToQtReadAdaptor<QCborSimpleType>(heap, QCborSimpleType::Undefined), heap);
  ret.write<qt_gsi::Converter<QCborSimpleType>::target_type > ((qt_gsi::Converter<QCborSimpleType>::target_type)qt_gsi::CppToQtAdaptor<QCborSimpleType>(((QCborValue *)cls)->toSimpleType (qt_gsi::QtToCppAdaptor<QCborSimpleType>(arg1).cref())));
}


// QString QCborValue::toString(const QString &defaultValue)


static void _init_f_toString_c2025 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue", true, "{}");
  decl->add_arg<const QString & > (argspec_0);
  decl->set_return<QString > ();
}

static void _call_f_toString_c2025 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QString &arg1 = args ? gsi::arg_reader<const QString & >() (args, heap) : gsi::arg_maker<const QString & >() ({}, heap);
  ret.write<QString > ((QString)((QCborValue *)cls)->toString (arg1));
}


// QUrl QCborValue::toUrl(const QUrl &defaultValue)


static void _init_f_toUrl_c1701 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue", true, "{}");
  decl->add_arg<const QUrl & > (argspec_0);
  decl->set_return<QUrl > ();
}

static void _call_f_toUrl_c1701 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QUrl &arg1 = args ? gsi::arg_reader<const QUrl & >() (args, heap) : gsi::arg_maker<const QUrl & >() ({}, heap);
  ret.write<QUrl > ((QUrl)((QCborValue *)cls)->toUrl (arg1));
}


// QUuid QCborValue::toUuid(const QUuid &defaultValue)


static void _init_f_toUuid_c1801 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("defaultValue", true, "{}");
  decl->add_arg<const QUuid & > (argspec_0);
  decl->set_return<QUuid > ();
}

static void _call_f_toUuid_c1801 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QUuid &arg1 = args ? gsi::arg_reader<const QUuid & >() (args, heap) : gsi::arg_maker<const QUuid & >() ({}, heap);
  ret.write<QUuid > ((QUuid)((QCborValue *)cls)->toUuid (arg1));
}


// QVariant QCborValue::toVariant()


static void _init_f_toVariant_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<QVariant > ();
}

static void _call_f_toVariant_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QVariant > ((QVariant)((QCborValue *)cls)->toVariant ());
}


// QCborValue::Type QCborValue::type()


static void _init_f_type_c0 (qt_gsi::GenericMethod *decl)
{
  decl->set_return<qt_gsi::Converter<QCborValue::Type>::target_type > ();
}

static void _call_f_type_c0 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<qt_gsi::Converter<QCborValue::Type>::target_type > ((qt_gsi::Converter<QCborValue::Type>::target_type)qt_gsi::CppToQtAdaptor<QCborValue::Type>(((QCborValue *)cls)->type ()));
}


// static QCborValue QCborValue::fromCbor(QCborStreamReader &reader)


static void _init_f_fromCbor_2304 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("reader");
  decl->add_arg<QCborStreamReader & > (argspec_0);
  decl->set_return<QCborValue > ();
}

static void _call_f_fromCbor_2304 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  QCborStreamReader &arg1 = gsi::arg_reader<QCborStreamReader & >() (args, heap);
  ret.write<QCborValue > ((QCborValue)QCborValue::fromCbor (arg1));
}


// static QCborValue QCborValue::fromCbor(const QByteArray &ba, QCborParserError *error)


static void _init_f_fromCbor_4437 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("ba");
  decl->add_arg<const QByteArray & > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("error", true, "nullptr");
  decl->add_arg<QCborParserError * > (argspec_1);
  decl->set_return<QCborValue > ();
}

static void _call_f_fromCbor_4437 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QByteArray &arg1 = gsi::arg_reader<const QByteArray & >() (args, heap);
  QCborParserError *arg2 = args ? gsi::arg_reader<QCborParserError * >() (args, heap) : gsi::arg_maker<QCborParserError * >() (nullptr, heap);
  ret.write<QCborValue > ((QCborValue)QCborValue::fromCbor (arg1, arg2));
}


// static QCborValue QCborValue::fromCbor(const char *data, qsizetype len, QCborParserError *error)


static void _init_f_fromCbor_5193 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("data");
  decl->add_arg<const char * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("len");
  decl->add_arg<qsizetype > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("error", true, "nullptr");
  decl->add_arg<QCborParserError * > (argspec_2);
  decl->set_return<QCborValue > ();
}

static void _call_f_fromCbor_5193 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const char *arg1 = gsi::arg_reader<const char * >() (args, heap);
  qsizetype arg2 = gsi::arg_reader<qsizetype >() (args, heap);
  QCborParserError *arg3 = args ? gsi::arg_reader<QCborParserError * >() (args, heap) : gsi::arg_maker<QCborParserError * >() (nullptr, heap);
  ret.write<QCborValue > ((QCborValue)QCborValue::fromCbor (arg1, arg2, arg3));
}


// static QCborValue QCborValue::fromCbor(const quint8 *data, qsizetype len, QCborParserError *error)


static void _init_f_fromCbor_5396 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("data");
  decl->add_arg<const quint8 * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("len");
  decl->add_arg<qsizetype > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("error", true, "nullptr");
  decl->add_arg<QCborParserError * > (argspec_2);
  decl->set_return<QCborValue > ();
}

static void _call_f_fromCbor_5396 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const quint8 *arg1 = gsi::arg_reader<const quint8 * >() (args, heap);
  qsizetype arg2 = gsi::arg_reader<qsizetype >() (args, heap);
  QCborParserError *arg3 = args ? gsi::arg_reader<QCborParserError * >() (args, heap) : gsi::arg_maker<QCborParserError * >() (nullptr, heap);
  ret.write<QCborValue > ((QCborValue)QCborValue::fromCbor (arg1, arg2, arg3));
}


// static QCborValue QCborValue::fromJsonValue(const QJsonValue &v)


static void _init_f_fromJsonValue_2313 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("v");
  decl->add_arg<const QJsonValue & > (argspec_0);
  decl->set_return<QCborValue > ();
}

static void _call_f_fromJsonValue_2313 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QJsonValue &arg1 = gsi::arg_reader<const QJsonValue & >() (args, heap);
  ret.write<QCborValue > ((QCborValue)QCborValue::fromJsonValue (arg1));
}


// static QCborValue QCborValue::fromVariant(const QVariant &variant)


static void _init_f_fromVariant_2119 (qt_gsi::GenericStaticMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("variant");
  decl->add_arg<const QVariant & > (argspec_0);
  decl->set_return<QCborValue > ();
}

static void _call_f_fromVariant_2119 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const QVariant &arg1 = gsi::arg_reader<const QVariant & >() (args, heap);
  ret.write<QCborValue > ((QCborValue)QCborValue::fromVariant (arg1));
}



namespace gsi
{

static gsi::Methods methods_QCborValue () {
  gsi::Methods methods;
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue()\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_0, &_call_ctor_QCborValue_0);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(QCborValue::Type t_)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_1950, &_call_ctor_QCborValue_1950);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(std::nullptr_t)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_1879, &_call_ctor_QCborValue_1879);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(bool b_)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_864, &_call_ctor_QCborValue_864);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(int i)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_767, &_call_ctor_QCborValue_767);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(unsigned int u)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_1772, &_call_ctor_QCborValue_1772);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(qint64 i)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_986, &_call_ctor_QCborValue_986);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(double v)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_1071, &_call_ctor_QCborValue_1071);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(QCborSimpleType st)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_1943, &_call_ctor_QCborValue_1943);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(const QByteArray &ba)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_2309, &_call_ctor_QCborValue_2309);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(const QString &s)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_2025, &_call_ctor_QCborValue_2025);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(QStringView s)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_1559, &_call_ctor_QCborValue_1559);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(QLatin1String s)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_1701, &_call_ctor_QCborValue_1701);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(const char *s)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_1731, &_call_ctor_QCborValue_1731);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(const QCborArray &a)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_2295, &_call_ctor_QCborValue_2295);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(const QCborMap &m)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_2070, &_call_ctor_QCborValue_2070);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(QCborTag tag, const QCborValue &taggedValue)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_3376, &_call_ctor_QCborValue_3376);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(QCborKnownTags t_, const QCborValue &tv)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_4016, &_call_ctor_QCborValue_4016);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(const QDateTime &dt)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_2175, &_call_ctor_QCborValue_2175);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(const QUrl &url)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_1701u1, &_call_ctor_QCborValue_1701u1);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(const QRegularExpression &rx)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_3188, &_call_ctor_QCborValue_3188);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(const QUuid &uuid)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_1801, &_call_ctor_QCborValue_1801);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(const void *)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_1751, &_call_ctor_QCborValue_1751);
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QCborValue::QCborValue(const QCborValue &other)\nThis method creates an object of class QCborValue.", &_init_ctor_QCborValue_2293, &_call_ctor_QCborValue_2293);
  methods += new qt_gsi::GenericMethod ("compare", "@brief Method int QCborValue::compare(const QCborValue &other)\n", true, &_init_f_compare_c2293, &_call_f_compare_c2293);
  methods += new qt_gsi::GenericMethod ("isArray?", "@brief Method bool QCborValue::isArray()\n", true, &_init_f_isArray_c0, &_call_f_isArray_c0);
  methods += new qt_gsi::GenericMethod ("isBool?", "@brief Method bool QCborValue::isBool()\n", true, &_init_f_isBool_c0, &_call_f_isBool_c0);
  methods += new qt_gsi::GenericMethod ("isByteArray?", "@brief Method bool QCborValue::isByteArray()\n", true, &_init_f_isByteArray_c0, &_call_f_isByteArray_c0);
  methods += new qt_gsi::GenericMethod ("isContainer?", "@brief Method bool QCborValue::isContainer()\n", true, &_init_f_isContainer_c0, &_call_f_isContainer_c0);
  methods += new qt_gsi::GenericMethod ("isDateTime?", "@brief Method bool QCborValue::isDateTime()\n", true, &_init_f_isDateTime_c0, &_call_f_isDateTime_c0);
  methods += new qt_gsi::GenericMethod ("isDouble?", "@brief Method bool QCborValue::isDouble()\n", true, &_init_f_isDouble_c0, &_call_f_isDouble_c0);
  methods += new qt_gsi::GenericMethod ("isFalse?", "@brief Method bool QCborValue::isFalse()\n", true, &_init_f_isFalse_c0, &_call_f_isFalse_c0);
  methods += new qt_gsi::GenericMethod ("isInteger?", "@brief Method bool QCborValue::isInteger()\n", true, &_init_f_isInteger_c0, &_call_f_isInteger_c0);
  methods += new qt_gsi::GenericMethod ("isInvalid?", "@brief Method bool QCborValue::isInvalid()\n", true, &_init_f_isInvalid_c0, &_call_f_isInvalid_c0);
  methods += new qt_gsi::GenericMethod ("isMap?", "@brief Method bool QCborValue::isMap()\n", true, &_init_f_isMap_c0, &_call_f_isMap_c0);
  methods += new qt_gsi::GenericMethod ("isNull?", "@brief Method bool QCborValue::isNull()\n", true, &_init_f_isNull_c0, &_call_f_isNull_c0);
  methods += new qt_gsi::GenericMethod ("isRegularExpression?", "@brief Method bool QCborValue::isRegularExpression()\n", true, &_init_f_isRegularExpression_c0, &_call_f_isRegularExpression_c0);
  methods += new qt_gsi::GenericMethod ("isSimpleType?", "@brief Method bool QCborValue::isSimpleType()\n", true, &_init_f_isSimpleType_c0, &_call_f_isSimpleType_c0);
  methods += new qt_gsi::GenericMethod ("isSimpleType?", "@brief Method bool QCborValue::isSimpleType(QCborSimpleType st)\n", true, &_init_f_isSimpleType_c1943, &_call_f_isSimpleType_c1943);
  methods += new qt_gsi::GenericMethod ("isString?", "@brief Method bool QCborValue::isString()\n", true, &_init_f_isString_c0, &_call_f_isString_c0);
  methods += new qt_gsi::GenericMethod ("isTag?", "@brief Method bool QCborValue::isTag()\n", true, &_init_f_isTag_c0, &_call_f_isTag_c0);
  methods += new qt_gsi::GenericMethod ("isTrue?", "@brief Method bool QCborValue::isTrue()\n", true, &_init_f_isTrue_c0, &_call_f_isTrue_c0);
  methods += new qt_gsi::GenericMethod ("isUndefined?", "@brief Method bool QCborValue::isUndefined()\n", true, &_init_f_isUndefined_c0, &_call_f_isUndefined_c0);
  methods += new qt_gsi::GenericMethod ("isUrl?", "@brief Method bool QCborValue::isUrl()\n", true, &_init_f_isUrl_c0, &_call_f_isUrl_c0);
  methods += new qt_gsi::GenericMethod ("isUuid?", "@brief Method bool QCborValue::isUuid()\n", true, &_init_f_isUuid_c0, &_call_f_isUuid_c0);
  methods += new qt_gsi::GenericMethod ("!=", "@brief Method bool QCborValue::operator!=(const QCborValue &other)\n", true, &_init_f_operator_excl__eq__c2293, &_call_f_operator_excl__eq__c2293);
  methods += new qt_gsi::GenericMethod ("<", "@brief Method bool QCborValue::operator<(const QCborValue &other)\n", true, &_init_f_operator_lt__c2293, &_call_f_operator_lt__c2293);
  methods += new qt_gsi::GenericMethod ("assign", "@brief Method QCborValue &QCborValue::operator=(const QCborValue &other)\n", false, &_init_f_operator_eq__2293, &_call_f_operator_eq__2293);
  methods += new qt_gsi::GenericMethod ("==", "@brief Method bool QCborValue::operator==(const QCborValue &other)\n", true, &_init_f_operator_eq__eq__c2293, &_call_f_operator_eq__eq__c2293);
  methods += new qt_gsi::GenericMethod ("[]", "@brief Method const QCborValue QCborValue::operator[](const QString &key)\n", true, &_init_f_operator_index__c2025, &_call_f_operator_index__c2025);
  methods += new qt_gsi::GenericMethod ("[]", "@brief Method const QCborValue QCborValue::operator[](QLatin1String key)\n", true, &_init_f_operator_index__c1701, &_call_f_operator_index__c1701);
  methods += new qt_gsi::GenericMethod ("[]", "@brief Method const QCborValue QCborValue::operator[](qint64 key)\n", true, &_init_f_operator_index__c986, &_call_f_operator_index__c986);
  methods += new qt_gsi::GenericMethod ("[]", "@brief Method QCborValueRef QCborValue::operator[](qint64 key)\n", false, &_init_f_operator_index__986, &_call_f_operator_index__986);
  methods += new qt_gsi::GenericMethod ("[]", "@brief Method QCborValueRef QCborValue::operator[](QLatin1String key)\n", false, &_init_f_operator_index__1701, &_call_f_operator_index__1701);
  methods += new qt_gsi::GenericMethod ("[]", "@brief Method QCborValueRef QCborValue::operator[](const QString &key)\n", false, &_init_f_operator_index__2025, &_call_f_operator_index__2025);
  methods += new qt_gsi::GenericMethod ("swap", "@brief Method void QCborValue::swap(QCborValue &other)\n", false, &_init_f_swap_1598, &_call_f_swap_1598);
  methods += new qt_gsi::GenericMethod ("tag", "@brief Method QCborTag QCborValue::tag(QCborTag defaultValue)\n", true, &_init_f_tag_c1191, &_call_f_tag_c1191);
  methods += new qt_gsi::GenericMethod ("taggedValue", "@brief Method QCborValue QCborValue::taggedValue(const QCborValue &defaultValue)\n", true, &_init_f_taggedValue_c2293, &_call_f_taggedValue_c2293);
  methods += new qt_gsi::GenericMethod ("toArray", "@brief Method QCborArray QCborValue::toArray()\n", true, &_init_f_toArray_c0, &_call_f_toArray_c0);
  methods += new qt_gsi::GenericMethod ("toArray", "@brief Method QCborArray QCborValue::toArray(const QCborArray &defaultValue)\n", true, &_init_f_toArray_c2295, &_call_f_toArray_c2295);
  methods += new qt_gsi::GenericMethod ("toBool", "@brief Method bool QCborValue::toBool(bool defaultValue)\n", true, &_init_f_toBool_c864, &_call_f_toBool_c864);
  methods += new qt_gsi::GenericMethod ("toByteArray", "@brief Method QByteArray QCborValue::toByteArray(const QByteArray &defaultValue)\n", true, &_init_f_toByteArray_c2309, &_call_f_toByteArray_c2309);
  methods += new qt_gsi::GenericMethod ("toCbor", "@brief Method QByteArray QCborValue::toCbor(QFlags<QCborValue::EncodingOption> opt)\n", true, &_init_f_toCbor_c3668, &_call_f_toCbor_c3668);
  methods += new qt_gsi::GenericMethod ("toCbor", "@brief Method void QCborValue::toCbor(QCborStreamWriter &writer, QFlags<QCborValue::EncodingOption> opt)\n", true, &_init_f_toCbor_c5906, &_call_f_toCbor_c5906);
  methods += new qt_gsi::GenericMethod ("toDateTime", "@brief Method QDateTime QCborValue::toDateTime(const QDateTime &defaultValue)\n", true, &_init_f_toDateTime_c2175, &_call_f_toDateTime_c2175);
  methods += new qt_gsi::GenericMethod ("toDiagnosticNotation", "@brief Method QString QCborValue::toDiagnosticNotation(QFlags<QCborValue::DiagnosticNotationOption> opts)\n", true, &_init_f_toDiagnosticNotation_c4734, &_call_f_toDiagnosticNotation_c4734);
  methods += new qt_gsi::GenericMethod ("toDouble", "@brief Method double QCborValue::toDouble(double defaultValue)\n", true, &_init_f_toDouble_c1071, &_call_f_toDouble_c1071);
  methods += new qt_gsi::GenericMethod ("toInteger", "@brief Method qint64 QCborValue::toInteger(qint64 defaultValue)\n", true, &_init_f_toInteger_c986, &_call_f_toInteger_c986);
  methods += new qt_gsi::GenericMethod ("toJsonValue", "@brief Method QJsonValue QCborValue::toJsonValue()\n", true, &_init_f_toJsonValue_c0, &_call_f_toJsonValue_c0);
  methods += new qt_gsi::GenericMethod ("toMap", "@brief Method QCborMap QCborValue::toMap()\n", true, &_init_f_toMap_c0, &_call_f_toMap_c0);
  methods += new qt_gsi::GenericMethod ("toMap", "@brief Method QCborMap QCborValue::toMap(const QCborMap &defaultValue)\n", true, &_init_f_toMap_c2070, &_call_f_toMap_c2070);
  methods += new qt_gsi::GenericMethod ("toRegularExpression", "@brief Method QRegularExpression QCborValue::toRegularExpression(const QRegularExpression &defaultValue)\n", true, &_init_f_toRegularExpression_c3188, &_call_f_toRegularExpression_c3188);
  methods += new qt_gsi::GenericMethod ("toSimpleType", "@brief Method QCborSimpleType QCborValue::toSimpleType(QCborSimpleType defaultValue)\n", true, &_init_f_toSimpleType_c1943, &_call_f_toSimpleType_c1943);
  methods += new qt_gsi::GenericMethod ("toString", "@brief Method QString QCborValue::toString(const QString &defaultValue)\n", true, &_init_f_toString_c2025, &_call_f_toString_c2025);
  methods += new qt_gsi::GenericMethod ("toUrl", "@brief Method QUrl QCborValue::toUrl(const QUrl &defaultValue)\n", true, &_init_f_toUrl_c1701, &_call_f_toUrl_c1701);
  methods += new qt_gsi::GenericMethod ("toUuid", "@brief Method QUuid QCborValue::toUuid(const QUuid &defaultValue)\n", true, &_init_f_toUuid_c1801, &_call_f_toUuid_c1801);
  methods += new qt_gsi::GenericMethod ("toVariant", "@brief Method QVariant QCborValue::toVariant()\n", true, &_init_f_toVariant_c0, &_call_f_toVariant_c0);
  methods += new qt_gsi::GenericMethod ("type", "@brief Method QCborValue::Type QCborValue::type()\n", true, &_init_f_type_c0, &_call_f_type_c0);
  methods += new qt_gsi::GenericStaticMethod ("fromCbor", "@brief Static method QCborValue QCborValue::fromCbor(QCborStreamReader &reader)\nThis method is static and can be called without an instance.", &_init_f_fromCbor_2304, &_call_f_fromCbor_2304);
  methods += new qt_gsi::GenericStaticMethod ("fromCbor", "@brief Static method QCborValue QCborValue::fromCbor(const QByteArray &ba, QCborParserError *error)\nThis method is static and can be called without an instance.", &_init_f_fromCbor_4437, &_call_f_fromCbor_4437);
  methods += new qt_gsi::GenericStaticMethod ("fromCbor", "@brief Static method QCborValue QCborValue::fromCbor(const char *data, qsizetype len, QCborParserError *error)\nThis method is static and can be called without an instance.", &_init_f_fromCbor_5193, &_call_f_fromCbor_5193);
  methods += new qt_gsi::GenericStaticMethod ("fromCbor", "@brief Static method QCborValue QCborValue::fromCbor(const quint8 *data, qsizetype len, QCborParserError *error)\nThis method is static and can be called without an instance.", &_init_f_fromCbor_5396, &_call_f_fromCbor_5396);
  methods += new qt_gsi::GenericStaticMethod ("fromJsonValue", "@brief Static method QCborValue QCborValue::fromJsonValue(const QJsonValue &v)\nThis method is static and can be called without an instance.", &_init_f_fromJsonValue_2313, &_call_f_fromJsonValue_2313);
  methods += new qt_gsi::GenericStaticMethod ("fromVariant", "@brief Static method QCborValue QCborValue::fromVariant(const QVariant &variant)\nThis method is static and can be called without an instance.", &_init_f_fromVariant_2119, &_call_f_fromVariant_2119);
  return methods;
}

gsi::Class<QCborValue> decl_QCborValue ("QtCore", "QCborValue",
  methods_QCborValue (),
  "@qt\n@brief Binding of QCborValue");


GSI_QTCORE_PUBLIC gsi::Class<QCborValue> &qtdecl_QCborValue () { return decl_QCborValue; }

}


//  Implementation of the enum wrapper class for QCborValue::DiagnosticNotationOption
namespace qt_gsi
{

static gsi::Enum<QCborValue::DiagnosticNotationOption> decl_QCborValue_DiagnosticNotationOption_Enum ("QtCore", "QCborValue_DiagnosticNotationOption",
    gsi::enum_const ("Compact", QCborValue::Compact, "@brief Enum constant QCborValue::Compact") +
    gsi::enum_const ("LineWrapped", QCborValue::LineWrapped, "@brief Enum constant QCborValue::LineWrapped") +
    gsi::enum_const ("ExtendedFormat", QCborValue::ExtendedFormat, "@brief Enum constant QCborValue::ExtendedFormat"),
  "@qt\n@brief This class represents the QCborValue::DiagnosticNotationOption enum");

static gsi::QFlagsClass<QCborValue::DiagnosticNotationOption > decl_QCborValue_DiagnosticNotationOption_Enums ("QtCore", "QCborValue_QFlags_DiagnosticNotationOption",
  "@qt\n@brief This class represents the QFlags<QCborValue::DiagnosticNotationOption> flag set");

//  Inject the declarations into the parent
static gsi::ClassExt<QCborValue> inject_QCborValue_DiagnosticNotationOption_Enum_in_parent (decl_QCborValue_DiagnosticNotationOption_Enum.defs ());
static gsi::ClassExt<QCborValue> decl_QCborValue_DiagnosticNotationOption_Enum_as_child (decl_QCborValue_DiagnosticNotationOption_Enum, "DiagnosticNotationOption");
static gsi::ClassExt<QCborValue> decl_QCborValue_DiagnosticNotationOption_Enums_as_child (decl_QCborValue_DiagnosticNotationOption_Enums, "QFlags_DiagnosticNotationOption");

}


//  Implementation of the enum wrapper class for QCborValue::EncodingOption
namespace qt_gsi
{

static gsi::Enum<QCborValue::EncodingOption> decl_QCborValue_EncodingOption_Enum ("QtCore", "QCborValue_EncodingOption",
    gsi::enum_const ("SortKeysInMaps", QCborValue::SortKeysInMaps, "@brief Enum constant QCborValue::SortKeysInMaps") +
    gsi::enum_const ("UseFloat", QCborValue::UseFloat, "@brief Enum constant QCborValue::UseFloat") +
    gsi::enum_const ("UseFloat16", QCborValue::UseFloat16, "@brief Enum constant QCborValue::UseFloat16") +
    gsi::enum_const ("UseIntegers", QCborValue::UseIntegers, "@brief Enum constant QCborValue::UseIntegers") +
    gsi::enum_const ("NoTransformation", QCborValue::NoTransformation, "@brief Enum constant QCborValue::NoTransformation"),
  "@qt\n@brief This class represents the QCborValue::EncodingOption enum");

static gsi::QFlagsClass<QCborValue::EncodingOption > decl_QCborValue_EncodingOption_Enums ("QtCore", "QCborValue_QFlags_EncodingOption",
  "@qt\n@brief This class represents the QFlags<QCborValue::EncodingOption> flag set");

//  Inject the declarations into the parent
static gsi::ClassExt<QCborValue> inject_QCborValue_EncodingOption_Enum_in_parent (decl_QCborValue_EncodingOption_Enum.defs ());
static gsi::ClassExt<QCborValue> decl_QCborValue_EncodingOption_Enum_as_child (decl_QCborValue_EncodingOption_Enum, "EncodingOption");
static gsi::ClassExt<QCborValue> decl_QCborValue_EncodingOption_Enums_as_child (decl_QCborValue_EncodingOption_Enums, "QFlags_EncodingOption");

}


//  Implementation of the enum wrapper class for QCborValue::Type
namespace qt_gsi
{

static gsi::Enum<QCborValue::Type> decl_QCborValue_Type_Enum ("QtCore", "QCborValue_Type",
    gsi::enum_const ("Integer", QCborValue::Integer, "@brief Enum constant QCborValue::Integer") +
    gsi::enum_const ("ByteArray", QCborValue::ByteArray, "@brief Enum constant QCborValue::ByteArray") +
    gsi::enum_const ("String", QCborValue::String, "@brief Enum constant QCborValue::String") +
    gsi::enum_const ("Array", QCborValue::Array, "@brief Enum constant QCborValue::Array") +
    gsi::enum_const ("Map", QCborValue::Map, "@brief Enum constant QCborValue::Map") +
    gsi::enum_const ("Tag", QCborValue::Tag, "@brief Enum constant QCborValue::Tag") +
    gsi::enum_const ("SimpleType", QCborValue::SimpleType, "@brief Enum constant QCborValue::SimpleType") +
    gsi::enum_const ("False", QCborValue::False, "@brief Enum constant QCborValue::False") +
    gsi::enum_const ("True", QCborValue::True, "@brief Enum constant QCborValue::True") +
    gsi::enum_const ("Null", QCborValue::Null, "@brief Enum constant QCborValue::Null") +
    gsi::enum_const ("Undefined", QCborValue::Undefined, "@brief Enum constant QCborValue::Undefined") +
    gsi::enum_const ("Double", QCborValue::Double, "@brief Enum constant QCborValue::Double") +
    gsi::enum_const ("DateTime", QCborValue::DateTime, "@brief Enum constant QCborValue::DateTime") +
    gsi::enum_const ("Url", QCborValue::Url, "@brief Enum constant QCborValue::Url") +
    gsi::enum_const ("RegularExpression", QCborValue::RegularExpression, "@brief Enum constant QCborValue::RegularExpression") +
    gsi::enum_const ("Uuid", QCborValue::Uuid, "@brief Enum constant QCborValue::Uuid") +
    gsi::enum_const ("Invalid", QCborValue::Invalid, "@brief Enum constant QCborValue::Invalid"),
  "@qt\n@brief This class represents the QCborValue::Type enum");

static gsi::QFlagsClass<QCborValue::Type > decl_QCborValue_Type_Enums ("QtCore", "QCborValue_QFlags_Type",
  "@qt\n@brief This class represents the QFlags<QCborValue::Type> flag set");

//  Inject the declarations into the parent
static gsi::ClassExt<QCborValue> inject_QCborValue_Type_Enum_in_parent (decl_QCborValue_Type_Enum.defs ());
static gsi::ClassExt<QCborValue> decl_QCborValue_Type_Enum_as_child (decl_QCborValue_Type_Enum, "Type");
static gsi::ClassExt<QCborValue> decl_QCborValue_Type_Enums_as_child (decl_QCborValue_Type_Enums, "QFlags_Type");

}

