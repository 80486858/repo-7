
/*

  KLayout Layout Viewer
  Copyright (C) 2006-2021 Matthias Koefferlein

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/

/**
*  @file gsiDeclQVulkanFunctions.cc 
*
*  DO NOT EDIT THIS FILE. 
*  This file has been created automatically
*/

#include <QVulkanFunctions>
#include "gsiQt.h"
#include "gsiQtGuiCommon.h"
#include "gsiDeclQtGuiTypeTraits.h"
#include <memory>

// -----------------------------------------------------------------------
// class QVulkanFunctions

//  Constructor QVulkanFunctions::QVulkanFunctions()


static void _init_ctor_QVulkanFunctions_0 (qt_gsi::GenericStaticMethod *decl)
{
  decl->set_return_new<QVulkanFunctions> ();
}

static void _call_ctor_QVulkanFunctions_0 (const qt_gsi::GenericStaticMethod * /*decl*/, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  ret.write<QVulkanFunctions *> (new QVulkanFunctions ());
}


// enum VkResult QVulkanFunctions::vkCreateDevice(struct VkPhysicalDevice_T *physicalDevice, const struct VkDeviceCreateInfo *pCreateInfo, const struct VkAllocationCallbacks *pAllocator, struct VkDevice_T **pDevice)


static void _init_f_vkCreateDevice_13533 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pCreateInfo");
  decl->add_arg<const struct VkDeviceCreateInfo * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pAllocator");
  decl->add_arg<const struct VkAllocationCallbacks * > (argspec_2);
  static gsi::ArgSpecBase argspec_3 ("pDevice");
  decl->add_arg<struct VkDevice_T ** > (argspec_3);
  decl->set_return<enum VkResult > ();
}

static void _call_f_vkCreateDevice_13533 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  const struct VkDeviceCreateInfo *arg2 = gsi::arg_reader<const struct VkDeviceCreateInfo * >() (args, heap);
  const struct VkAllocationCallbacks *arg3 = gsi::arg_reader<const struct VkAllocationCallbacks * >() (args, heap);
  struct VkDevice_T **arg4 = gsi::arg_reader<struct VkDevice_T ** >() (args, heap);
  ret.write<enum VkResult > ((enum VkResult)((QVulkanFunctions *)cls)->vkCreateDevice (arg1, arg2, arg3, arg4));
}


// enum VkResult QVulkanFunctions::vkEnumerateDeviceExtensionProperties(struct VkPhysicalDevice_T *physicalDevice, const char *pLayerName, unsigned int *pPropertyCount, struct VkExtensionProperties *pProperties)


static void _init_f_vkEnumerateDeviceExtensionProperties_10263 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pLayerName");
  decl->add_arg<const char * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pPropertyCount");
  decl->add_arg<unsigned int * > (argspec_2);
  static gsi::ArgSpecBase argspec_3 ("pProperties");
  decl->add_arg<struct VkExtensionProperties * > (argspec_3);
  decl->set_return<enum VkResult > ();
}

static void _call_f_vkEnumerateDeviceExtensionProperties_10263 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  const char *arg2 = gsi::arg_reader<const char * >() (args, heap);
  unsigned int *arg3 = gsi::arg_reader<unsigned int * >() (args, heap);
  struct VkExtensionProperties *arg4 = gsi::arg_reader<struct VkExtensionProperties * >() (args, heap);
  ret.write<enum VkResult > ((enum VkResult)((QVulkanFunctions *)cls)->vkEnumerateDeviceExtensionProperties (arg1, arg2, arg3, arg4));
}


// enum VkResult QVulkanFunctions::vkEnumerateDeviceLayerProperties(struct VkPhysicalDevice_T *physicalDevice, unsigned int *pPropertyCount, struct VkLayerProperties *pProperties)


static void _init_f_vkEnumerateDeviceLayerProperties_8192 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pPropertyCount");
  decl->add_arg<unsigned int * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pProperties");
  decl->add_arg<struct VkLayerProperties * > (argspec_2);
  decl->set_return<enum VkResult > ();
}

static void _call_f_vkEnumerateDeviceLayerProperties_8192 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  unsigned int *arg2 = gsi::arg_reader<unsigned int * >() (args, heap);
  struct VkLayerProperties *arg3 = gsi::arg_reader<struct VkLayerProperties * >() (args, heap);
  ret.write<enum VkResult > ((enum VkResult)((QVulkanFunctions *)cls)->vkEnumerateDeviceLayerProperties (arg1, arg2, arg3));
}


// enum VkResult QVulkanFunctions::vkEnumerateInstanceExtensionProperties(const char *pLayerName, unsigned int *pPropertyCount, struct VkExtensionProperties *pProperties)


static void _init_f_vkEnumerateInstanceExtensionProperties_7135 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("pLayerName");
  decl->add_arg<const char * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pPropertyCount");
  decl->add_arg<unsigned int * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pProperties");
  decl->add_arg<struct VkExtensionProperties * > (argspec_2);
  decl->set_return<enum VkResult > ();
}

static void _call_f_vkEnumerateInstanceExtensionProperties_7135 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  const char *arg1 = gsi::arg_reader<const char * >() (args, heap);
  unsigned int *arg2 = gsi::arg_reader<unsigned int * >() (args, heap);
  struct VkExtensionProperties *arg3 = gsi::arg_reader<struct VkExtensionProperties * >() (args, heap);
  ret.write<enum VkResult > ((enum VkResult)((QVulkanFunctions *)cls)->vkEnumerateInstanceExtensionProperties (arg1, arg2, arg3));
}


// enum VkResult QVulkanFunctions::vkEnumerateInstanceLayerProperties(unsigned int *pPropertyCount, struct VkLayerProperties *pProperties)


static void _init_f_vkEnumerateInstanceLayerProperties_5064 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("pPropertyCount");
  decl->add_arg<unsigned int * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pProperties");
  decl->add_arg<struct VkLayerProperties * > (argspec_1);
  decl->set_return<enum VkResult > ();
}

static void _call_f_vkEnumerateInstanceLayerProperties_5064 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  unsigned int *arg1 = gsi::arg_reader<unsigned int * >() (args, heap);
  struct VkLayerProperties *arg2 = gsi::arg_reader<struct VkLayerProperties * >() (args, heap);
  ret.write<enum VkResult > ((enum VkResult)((QVulkanFunctions *)cls)->vkEnumerateInstanceLayerProperties (arg1, arg2));
}


// enum VkResult QVulkanFunctions::vkEnumeratePhysicalDeviceGroups(struct VkInstance_T *instance, unsigned int *pPhysicalDeviceGroupCount, struct VkPhysicalDeviceGroupProperties *pPhysicalDeviceGroupProperties)


static void _init_f_vkEnumeratePhysicalDeviceGroups_9029 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("instance");
  decl->add_arg<struct VkInstance_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pPhysicalDeviceGroupCount");
  decl->add_arg<unsigned int * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pPhysicalDeviceGroupProperties");
  decl->add_arg<struct VkPhysicalDeviceGroupProperties * > (argspec_2);
  decl->set_return<enum VkResult > ();
}

static void _call_f_vkEnumeratePhysicalDeviceGroups_9029 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkInstance_T *arg1 = gsi::arg_reader<struct VkInstance_T * >() (args, heap);
  unsigned int *arg2 = gsi::arg_reader<unsigned int * >() (args, heap);
  struct VkPhysicalDeviceGroupProperties *arg3 = gsi::arg_reader<struct VkPhysicalDeviceGroupProperties * >() (args, heap);
  ret.write<enum VkResult > ((enum VkResult)((QVulkanFunctions *)cls)->vkEnumeratePhysicalDeviceGroups (arg1, arg2, arg3));
}


// enum VkResult QVulkanFunctions::vkEnumeratePhysicalDevices(struct VkInstance_T *instance, unsigned int *pPhysicalDeviceCount, struct VkPhysicalDevice_T **pPhysicalDevices)


static void _init_f_vkEnumeratePhysicalDevices_7656 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("instance");
  decl->add_arg<struct VkInstance_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pPhysicalDeviceCount");
  decl->add_arg<unsigned int * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pPhysicalDevices");
  decl->add_arg<struct VkPhysicalDevice_T ** > (argspec_2);
  decl->set_return<enum VkResult > ();
}

static void _call_f_vkEnumeratePhysicalDevices_7656 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkInstance_T *arg1 = gsi::arg_reader<struct VkInstance_T * >() (args, heap);
  unsigned int *arg2 = gsi::arg_reader<unsigned int * >() (args, heap);
  struct VkPhysicalDevice_T **arg3 = gsi::arg_reader<struct VkPhysicalDevice_T ** >() (args, heap);
  ret.write<enum VkResult > ((enum VkResult)((QVulkanFunctions *)cls)->vkEnumeratePhysicalDevices (arg1, arg2, arg3));
}


// void *QVulkanFunctions::vkGetDeviceProcAddr(VkDevice device, const char *pName)()


static void _init_f_vkGetDeviceProcAddr_2844 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("device");
  decl->add_arg<VkDevice > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pName");
  decl->add_arg<const char * > (argspec_1);
  decl->set_return<void *() > ();
}

static void _call_f_vkGetDeviceProcAddr_2844 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  VkDevice arg1 = gsi::arg_reader<VkDevice >() (args, heap);
  const char *arg2 = gsi::arg_reader<const char * >() (args, heap);
  ret.write<void *() > ((void *())((QVulkanFunctions *)cls)->vkGetDeviceProcAddr (arg1, arg2));
}


// void QVulkanFunctions::vkGetPhysicalDeviceExternalBufferProperties(struct VkPhysicalDevice_T *physicalDevice, const struct VkPhysicalDeviceExternalBufferInfo *pExternalBufferInfo, struct VkExternalBufferProperties *pExternalBufferProperties)


static void _init_f_vkGetPhysicalDeviceExternalBufferProperties_12747 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pExternalBufferInfo");
  decl->add_arg<const struct VkPhysicalDeviceExternalBufferInfo * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pExternalBufferProperties");
  decl->add_arg<struct VkExternalBufferProperties * > (argspec_2);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceExternalBufferProperties_12747 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  const struct VkPhysicalDeviceExternalBufferInfo *arg2 = gsi::arg_reader<const struct VkPhysicalDeviceExternalBufferInfo * >() (args, heap);
  struct VkExternalBufferProperties *arg3 = gsi::arg_reader<struct VkExternalBufferProperties * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceExternalBufferProperties (arg1, arg2, arg3);
}


// void QVulkanFunctions::vkGetPhysicalDeviceExternalFenceProperties(struct VkPhysicalDevice_T *physicalDevice, const struct VkPhysicalDeviceExternalFenceInfo *pExternalFenceInfo, struct VkExternalFenceProperties *pExternalFenceProperties)


static void _init_f_vkGetPhysicalDeviceExternalFenceProperties_12505 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pExternalFenceInfo");
  decl->add_arg<const struct VkPhysicalDeviceExternalFenceInfo * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pExternalFenceProperties");
  decl->add_arg<struct VkExternalFenceProperties * > (argspec_2);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceExternalFenceProperties_12505 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  const struct VkPhysicalDeviceExternalFenceInfo *arg2 = gsi::arg_reader<const struct VkPhysicalDeviceExternalFenceInfo * >() (args, heap);
  struct VkExternalFenceProperties *arg3 = gsi::arg_reader<struct VkExternalFenceProperties * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceExternalFenceProperties (arg1, arg2, arg3);
}


// void QVulkanFunctions::vkGetPhysicalDeviceExternalSemaphoreProperties(struct VkPhysicalDevice_T *physicalDevice, const struct VkPhysicalDeviceExternalSemaphoreInfo *pExternalSemaphoreInfo, struct VkExternalSemaphoreProperties *pExternalSemaphoreProperties)


static void _init_f_vkGetPhysicalDeviceExternalSemaphoreProperties_13407 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pExternalSemaphoreInfo");
  decl->add_arg<const struct VkPhysicalDeviceExternalSemaphoreInfo * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pExternalSemaphoreProperties");
  decl->add_arg<struct VkExternalSemaphoreProperties * > (argspec_2);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceExternalSemaphoreProperties_13407 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  const struct VkPhysicalDeviceExternalSemaphoreInfo *arg2 = gsi::arg_reader<const struct VkPhysicalDeviceExternalSemaphoreInfo * >() (args, heap);
  struct VkExternalSemaphoreProperties *arg3 = gsi::arg_reader<struct VkExternalSemaphoreProperties * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceExternalSemaphoreProperties (arg1, arg2, arg3);
}


// void QVulkanFunctions::vkGetPhysicalDeviceFeatures(struct VkPhysicalDevice_T *physicalDevice, struct VkPhysicalDeviceFeatures *pFeatures)


static void _init_f_vkGetPhysicalDeviceFeatures_7016 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pFeatures");
  decl->add_arg<struct VkPhysicalDeviceFeatures * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceFeatures_7016 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  struct VkPhysicalDeviceFeatures *arg2 = gsi::arg_reader<struct VkPhysicalDeviceFeatures * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceFeatures (arg1, arg2);
}


// void QVulkanFunctions::vkGetPhysicalDeviceFeatures2(struct VkPhysicalDevice_T *physicalDevice, struct VkPhysicalDeviceFeatures2 *pFeatures)


static void _init_f_vkGetPhysicalDeviceFeatures2_7066 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pFeatures");
  decl->add_arg<struct VkPhysicalDeviceFeatures2 * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceFeatures2_7066 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  struct VkPhysicalDeviceFeatures2 *arg2 = gsi::arg_reader<struct VkPhysicalDeviceFeatures2 * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceFeatures2 (arg1, arg2);
}


// void QVulkanFunctions::vkGetPhysicalDeviceFormatProperties(struct VkPhysicalDevice_T *physicalDevice, enum VkFormat format, struct VkFormatProperties *pFormatProperties)


static void _init_f_vkGetPhysicalDeviceFormatProperties_8169 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("format");
  decl->add_arg<enum VkFormat > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pFormatProperties");
  decl->add_arg<struct VkFormatProperties * > (argspec_2);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceFormatProperties_8169 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  enum VkFormat arg2 = gsi::arg_reader<enum VkFormat >() (args, heap);
  struct VkFormatProperties *arg3 = gsi::arg_reader<struct VkFormatProperties * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceFormatProperties (arg1, arg2, arg3);
}


// void QVulkanFunctions::vkGetPhysicalDeviceFormatProperties2(struct VkPhysicalDevice_T *physicalDevice, enum VkFormat format, struct VkFormatProperties2 *pFormatProperties)


static void _init_f_vkGetPhysicalDeviceFormatProperties2_8219 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("format");
  decl->add_arg<enum VkFormat > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pFormatProperties");
  decl->add_arg<struct VkFormatProperties2 * > (argspec_2);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceFormatProperties2_8219 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  enum VkFormat arg2 = gsi::arg_reader<enum VkFormat >() (args, heap);
  struct VkFormatProperties2 *arg3 = gsi::arg_reader<struct VkFormatProperties2 * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceFormatProperties2 (arg1, arg2, arg3);
}


// enum VkResult QVulkanFunctions::vkGetPhysicalDeviceImageFormatProperties(struct VkPhysicalDevice_T *physicalDevice, enum VkFormat format, enum VkImageType type, enum VkImageTiling tiling, unsigned int usage, unsigned int flags, struct VkImageFormatProperties *pImageFormatProperties)


static void _init_f_vkGetPhysicalDeviceImageFormatProperties_16183 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("format");
  decl->add_arg<enum VkFormat > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("type");
  decl->add_arg<enum VkImageType > (argspec_2);
  static gsi::ArgSpecBase argspec_3 ("tiling");
  decl->add_arg<enum VkImageTiling > (argspec_3);
  static gsi::ArgSpecBase argspec_4 ("usage");
  decl->add_arg<unsigned int > (argspec_4);
  static gsi::ArgSpecBase argspec_5 ("flags");
  decl->add_arg<unsigned int > (argspec_5);
  static gsi::ArgSpecBase argspec_6 ("pImageFormatProperties");
  decl->add_arg<struct VkImageFormatProperties * > (argspec_6);
  decl->set_return<enum VkResult > ();
}

static void _call_f_vkGetPhysicalDeviceImageFormatProperties_16183 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  enum VkFormat arg2 = gsi::arg_reader<enum VkFormat >() (args, heap);
  enum VkImageType arg3 = gsi::arg_reader<enum VkImageType >() (args, heap);
  enum VkImageTiling arg4 = gsi::arg_reader<enum VkImageTiling >() (args, heap);
  unsigned int arg5 = gsi::arg_reader<unsigned int >() (args, heap);
  unsigned int arg6 = gsi::arg_reader<unsigned int >() (args, heap);
  struct VkImageFormatProperties *arg7 = gsi::arg_reader<struct VkImageFormatProperties * >() (args, heap);
  ret.write<enum VkResult > ((enum VkResult)((QVulkanFunctions *)cls)->vkGetPhysicalDeviceImageFormatProperties (arg1, arg2, arg3, arg4, arg5, arg6, arg7));
}


// enum VkResult QVulkanFunctions::vkGetPhysicalDeviceImageFormatProperties2(struct VkPhysicalDevice_T *physicalDevice, const struct VkPhysicalDeviceImageFormatInfo2 *pImageFormatInfo, struct VkImageFormatProperties2 *pImageFormatProperties)


static void _init_f_vkGetPhysicalDeviceImageFormatProperties2_12173 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pImageFormatInfo");
  decl->add_arg<const struct VkPhysicalDeviceImageFormatInfo2 * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pImageFormatProperties");
  decl->add_arg<struct VkImageFormatProperties2 * > (argspec_2);
  decl->set_return<enum VkResult > ();
}

static void _call_f_vkGetPhysicalDeviceImageFormatProperties2_12173 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  const struct VkPhysicalDeviceImageFormatInfo2 *arg2 = gsi::arg_reader<const struct VkPhysicalDeviceImageFormatInfo2 * >() (args, heap);
  struct VkImageFormatProperties2 *arg3 = gsi::arg_reader<struct VkImageFormatProperties2 * >() (args, heap);
  ret.write<enum VkResult > ((enum VkResult)((QVulkanFunctions *)cls)->vkGetPhysicalDeviceImageFormatProperties2 (arg1, arg2, arg3));
}


// void QVulkanFunctions::vkGetPhysicalDeviceMemoryProperties(struct VkPhysicalDevice_T *physicalDevice, struct VkPhysicalDeviceMemoryProperties *pMemoryProperties)


static void _init_f_vkGetPhysicalDeviceMemoryProperties_7887 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pMemoryProperties");
  decl->add_arg<struct VkPhysicalDeviceMemoryProperties * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceMemoryProperties_7887 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  struct VkPhysicalDeviceMemoryProperties *arg2 = gsi::arg_reader<struct VkPhysicalDeviceMemoryProperties * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceMemoryProperties (arg1, arg2);
}


// void QVulkanFunctions::vkGetPhysicalDeviceMemoryProperties2(struct VkPhysicalDevice_T *physicalDevice, struct VkPhysicalDeviceMemoryProperties2 *pMemoryProperties)


static void _init_f_vkGetPhysicalDeviceMemoryProperties2_7937 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pMemoryProperties");
  decl->add_arg<struct VkPhysicalDeviceMemoryProperties2 * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceMemoryProperties2_7937 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  struct VkPhysicalDeviceMemoryProperties2 *arg2 = gsi::arg_reader<struct VkPhysicalDeviceMemoryProperties2 * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceMemoryProperties2 (arg1, arg2);
}


// void QVulkanFunctions::vkGetPhysicalDeviceProperties(struct VkPhysicalDevice_T *physicalDevice, struct VkPhysicalDeviceProperties *pProperties)


static void _init_f_vkGetPhysicalDeviceProperties_7254 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pProperties");
  decl->add_arg<struct VkPhysicalDeviceProperties * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceProperties_7254 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  struct VkPhysicalDeviceProperties *arg2 = gsi::arg_reader<struct VkPhysicalDeviceProperties * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceProperties (arg1, arg2);
}


// void QVulkanFunctions::vkGetPhysicalDeviceProperties2(struct VkPhysicalDevice_T *physicalDevice, struct VkPhysicalDeviceProperties2 *pProperties)


static void _init_f_vkGetPhysicalDeviceProperties2_7304 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pProperties");
  decl->add_arg<struct VkPhysicalDeviceProperties2 * > (argspec_1);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceProperties2_7304 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  struct VkPhysicalDeviceProperties2 *arg2 = gsi::arg_reader<struct VkPhysicalDeviceProperties2 * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceProperties2 (arg1, arg2);
}


// void QVulkanFunctions::vkGetPhysicalDeviceQueueFamilyProperties(struct VkPhysicalDevice_T *physicalDevice, unsigned int *pQueueFamilyPropertyCount, struct VkQueueFamilyProperties *pQueueFamilyProperties)


static void _init_f_vkGetPhysicalDeviceQueueFamilyProperties_8810 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pQueueFamilyPropertyCount");
  decl->add_arg<unsigned int * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pQueueFamilyProperties");
  decl->add_arg<struct VkQueueFamilyProperties * > (argspec_2);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceQueueFamilyProperties_8810 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  unsigned int *arg2 = gsi::arg_reader<unsigned int * >() (args, heap);
  struct VkQueueFamilyProperties *arg3 = gsi::arg_reader<struct VkQueueFamilyProperties * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceQueueFamilyProperties (arg1, arg2, arg3);
}


// void QVulkanFunctions::vkGetPhysicalDeviceQueueFamilyProperties2(struct VkPhysicalDevice_T *physicalDevice, unsigned int *pQueueFamilyPropertyCount, struct VkQueueFamilyProperties2 *pQueueFamilyProperties)


static void _init_f_vkGetPhysicalDeviceQueueFamilyProperties2_8860 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pQueueFamilyPropertyCount");
  decl->add_arg<unsigned int * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pQueueFamilyProperties");
  decl->add_arg<struct VkQueueFamilyProperties2 * > (argspec_2);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceQueueFamilyProperties2_8860 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  unsigned int *arg2 = gsi::arg_reader<unsigned int * >() (args, heap);
  struct VkQueueFamilyProperties2 *arg3 = gsi::arg_reader<struct VkQueueFamilyProperties2 * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceQueueFamilyProperties2 (arg1, arg2, arg3);
}


// void QVulkanFunctions::vkGetPhysicalDeviceSparseImageFormatProperties(struct VkPhysicalDevice_T *physicalDevice, enum VkFormat format, enum VkImageType type, enum VkSampleCountFlagBits samples, unsigned int usage, enum VkImageTiling tiling, unsigned int *pPropertyCount, struct VkSparseImageFormatProperties *pProperties)


static void _init_f_vkGetPhysicalDeviceSparseImageFormatProperties_20004 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("format");
  decl->add_arg<enum VkFormat > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("type");
  decl->add_arg<enum VkImageType > (argspec_2);
  static gsi::ArgSpecBase argspec_3 ("samples");
  decl->add_arg<enum VkSampleCountFlagBits > (argspec_3);
  static gsi::ArgSpecBase argspec_4 ("usage");
  decl->add_arg<unsigned int > (argspec_4);
  static gsi::ArgSpecBase argspec_5 ("tiling");
  decl->add_arg<enum VkImageTiling > (argspec_5);
  static gsi::ArgSpecBase argspec_6 ("pPropertyCount");
  decl->add_arg<unsigned int * > (argspec_6);
  static gsi::ArgSpecBase argspec_7 ("pProperties");
  decl->add_arg<struct VkSparseImageFormatProperties * > (argspec_7);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceSparseImageFormatProperties_20004 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  enum VkFormat arg2 = gsi::arg_reader<enum VkFormat >() (args, heap);
  enum VkImageType arg3 = gsi::arg_reader<enum VkImageType >() (args, heap);
  enum VkSampleCountFlagBits arg4 = gsi::arg_reader<enum VkSampleCountFlagBits >() (args, heap);
  unsigned int arg5 = gsi::arg_reader<unsigned int >() (args, heap);
  enum VkImageTiling arg6 = gsi::arg_reader<enum VkImageTiling >() (args, heap);
  unsigned int *arg7 = gsi::arg_reader<unsigned int * >() (args, heap);
  struct VkSparseImageFormatProperties *arg8 = gsi::arg_reader<struct VkSparseImageFormatProperties * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceSparseImageFormatProperties (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
}


// void QVulkanFunctions::vkGetPhysicalDeviceSparseImageFormatProperties2(struct VkPhysicalDevice_T *physicalDevice, const struct VkPhysicalDeviceSparseImageFormatInfo2 *pFormatInfo, unsigned int *pPropertyCount, struct VkSparseImageFormatProperties2 *pProperties)


static void _init_f_vkGetPhysicalDeviceSparseImageFormatProperties2_15267 (qt_gsi::GenericMethod *decl)
{
  static gsi::ArgSpecBase argspec_0 ("physicalDevice");
  decl->add_arg<struct VkPhysicalDevice_T * > (argspec_0);
  static gsi::ArgSpecBase argspec_1 ("pFormatInfo");
  decl->add_arg<const struct VkPhysicalDeviceSparseImageFormatInfo2 * > (argspec_1);
  static gsi::ArgSpecBase argspec_2 ("pPropertyCount");
  decl->add_arg<unsigned int * > (argspec_2);
  static gsi::ArgSpecBase argspec_3 ("pProperties");
  decl->add_arg<struct VkSparseImageFormatProperties2 * > (argspec_3);
  decl->set_return<void > ();
}

static void _call_f_vkGetPhysicalDeviceSparseImageFormatProperties2_15267 (const qt_gsi::GenericMethod * /*decl*/, void *cls, gsi::SerialArgs &args, gsi::SerialArgs &ret) 
{
  __SUPPRESS_UNUSED_WARNING(args);
  tl::Heap heap;
  struct VkPhysicalDevice_T *arg1 = gsi::arg_reader<struct VkPhysicalDevice_T * >() (args, heap);
  const struct VkPhysicalDeviceSparseImageFormatInfo2 *arg2 = gsi::arg_reader<const struct VkPhysicalDeviceSparseImageFormatInfo2 * >() (args, heap);
  unsigned int *arg3 = gsi::arg_reader<unsigned int * >() (args, heap);
  struct VkSparseImageFormatProperties2 *arg4 = gsi::arg_reader<struct VkSparseImageFormatProperties2 * >() (args, heap);
  __SUPPRESS_UNUSED_WARNING(ret);
  ((QVulkanFunctions *)cls)->vkGetPhysicalDeviceSparseImageFormatProperties2 (arg1, arg2, arg3, arg4);
}



namespace gsi
{

static gsi::Methods methods_QVulkanFunctions () {
  gsi::Methods methods;
  methods += new qt_gsi::GenericStaticMethod ("new", "@brief Constructor QVulkanFunctions::QVulkanFunctions()\nThis method creates an object of class QVulkanFunctions.", &_init_ctor_QVulkanFunctions_0, &_call_ctor_QVulkanFunctions_0);
  methods += new qt_gsi::GenericMethod ("vkCreateDevice", "@brief Method enum VkResult QVulkanFunctions::vkCreateDevice(struct VkPhysicalDevice_T *physicalDevice, const struct VkDeviceCreateInfo *pCreateInfo, const struct VkAllocationCallbacks *pAllocator, struct VkDevice_T **pDevice)\n", false, &_init_f_vkCreateDevice_13533, &_call_f_vkCreateDevice_13533);
  methods += new qt_gsi::GenericMethod ("vkEnumerateDeviceExtensionProperties", "@brief Method enum VkResult QVulkanFunctions::vkEnumerateDeviceExtensionProperties(struct VkPhysicalDevice_T *physicalDevice, const char *pLayerName, unsigned int *pPropertyCount, struct VkExtensionProperties *pProperties)\n", false, &_init_f_vkEnumerateDeviceExtensionProperties_10263, &_call_f_vkEnumerateDeviceExtensionProperties_10263);
  methods += new qt_gsi::GenericMethod ("vkEnumerateDeviceLayerProperties", "@brief Method enum VkResult QVulkanFunctions::vkEnumerateDeviceLayerProperties(struct VkPhysicalDevice_T *physicalDevice, unsigned int *pPropertyCount, struct VkLayerProperties *pProperties)\n", false, &_init_f_vkEnumerateDeviceLayerProperties_8192, &_call_f_vkEnumerateDeviceLayerProperties_8192);
  methods += new qt_gsi::GenericMethod ("vkEnumerateInstanceExtensionProperties", "@brief Method enum VkResult QVulkanFunctions::vkEnumerateInstanceExtensionProperties(const char *pLayerName, unsigned int *pPropertyCount, struct VkExtensionProperties *pProperties)\n", false, &_init_f_vkEnumerateInstanceExtensionProperties_7135, &_call_f_vkEnumerateInstanceExtensionProperties_7135);
  methods += new qt_gsi::GenericMethod ("vkEnumerateInstanceLayerProperties", "@brief Method enum VkResult QVulkanFunctions::vkEnumerateInstanceLayerProperties(unsigned int *pPropertyCount, struct VkLayerProperties *pProperties)\n", false, &_init_f_vkEnumerateInstanceLayerProperties_5064, &_call_f_vkEnumerateInstanceLayerProperties_5064);
  methods += new qt_gsi::GenericMethod ("vkEnumeratePhysicalDeviceGroups", "@brief Method enum VkResult QVulkanFunctions::vkEnumeratePhysicalDeviceGroups(struct VkInstance_T *instance, unsigned int *pPhysicalDeviceGroupCount, struct VkPhysicalDeviceGroupProperties *pPhysicalDeviceGroupProperties)\n", false, &_init_f_vkEnumeratePhysicalDeviceGroups_9029, &_call_f_vkEnumeratePhysicalDeviceGroups_9029);
  methods += new qt_gsi::GenericMethod ("vkEnumeratePhysicalDevices", "@brief Method enum VkResult QVulkanFunctions::vkEnumeratePhysicalDevices(struct VkInstance_T *instance, unsigned int *pPhysicalDeviceCount, struct VkPhysicalDevice_T **pPhysicalDevices)\n", false, &_init_f_vkEnumeratePhysicalDevices_7656, &_call_f_vkEnumeratePhysicalDevices_7656);
  methods += new qt_gsi::GenericMethod ("vkGetDeviceProcAddr", "@brief Method void *QVulkanFunctions::vkGetDeviceProcAddr(VkDevice device, const char *pName)()\n", false, &_init_f_vkGetDeviceProcAddr_2844, &_call_f_vkGetDeviceProcAddr_2844);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceExternalBufferProperties", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceExternalBufferProperties(struct VkPhysicalDevice_T *physicalDevice, const struct VkPhysicalDeviceExternalBufferInfo *pExternalBufferInfo, struct VkExternalBufferProperties *pExternalBufferProperties)\n", false, &_init_f_vkGetPhysicalDeviceExternalBufferProperties_12747, &_call_f_vkGetPhysicalDeviceExternalBufferProperties_12747);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceExternalFenceProperties", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceExternalFenceProperties(struct VkPhysicalDevice_T *physicalDevice, const struct VkPhysicalDeviceExternalFenceInfo *pExternalFenceInfo, struct VkExternalFenceProperties *pExternalFenceProperties)\n", false, &_init_f_vkGetPhysicalDeviceExternalFenceProperties_12505, &_call_f_vkGetPhysicalDeviceExternalFenceProperties_12505);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceExternalSemaphoreProperties", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceExternalSemaphoreProperties(struct VkPhysicalDevice_T *physicalDevice, const struct VkPhysicalDeviceExternalSemaphoreInfo *pExternalSemaphoreInfo, struct VkExternalSemaphoreProperties *pExternalSemaphoreProperties)\n", false, &_init_f_vkGetPhysicalDeviceExternalSemaphoreProperties_13407, &_call_f_vkGetPhysicalDeviceExternalSemaphoreProperties_13407);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceFeatures", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceFeatures(struct VkPhysicalDevice_T *physicalDevice, struct VkPhysicalDeviceFeatures *pFeatures)\n", false, &_init_f_vkGetPhysicalDeviceFeatures_7016, &_call_f_vkGetPhysicalDeviceFeatures_7016);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceFeatures2", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceFeatures2(struct VkPhysicalDevice_T *physicalDevice, struct VkPhysicalDeviceFeatures2 *pFeatures)\n", false, &_init_f_vkGetPhysicalDeviceFeatures2_7066, &_call_f_vkGetPhysicalDeviceFeatures2_7066);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceFormatProperties", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceFormatProperties(struct VkPhysicalDevice_T *physicalDevice, enum VkFormat format, struct VkFormatProperties *pFormatProperties)\n", false, &_init_f_vkGetPhysicalDeviceFormatProperties_8169, &_call_f_vkGetPhysicalDeviceFormatProperties_8169);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceFormatProperties2", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceFormatProperties2(struct VkPhysicalDevice_T *physicalDevice, enum VkFormat format, struct VkFormatProperties2 *pFormatProperties)\n", false, &_init_f_vkGetPhysicalDeviceFormatProperties2_8219, &_call_f_vkGetPhysicalDeviceFormatProperties2_8219);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceImageFormatProperties", "@brief Method enum VkResult QVulkanFunctions::vkGetPhysicalDeviceImageFormatProperties(struct VkPhysicalDevice_T *physicalDevice, enum VkFormat format, enum VkImageType type, enum VkImageTiling tiling, unsigned int usage, unsigned int flags, struct VkImageFormatProperties *pImageFormatProperties)\n", false, &_init_f_vkGetPhysicalDeviceImageFormatProperties_16183, &_call_f_vkGetPhysicalDeviceImageFormatProperties_16183);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceImageFormatProperties2", "@brief Method enum VkResult QVulkanFunctions::vkGetPhysicalDeviceImageFormatProperties2(struct VkPhysicalDevice_T *physicalDevice, const struct VkPhysicalDeviceImageFormatInfo2 *pImageFormatInfo, struct VkImageFormatProperties2 *pImageFormatProperties)\n", false, &_init_f_vkGetPhysicalDeviceImageFormatProperties2_12173, &_call_f_vkGetPhysicalDeviceImageFormatProperties2_12173);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceMemoryProperties", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceMemoryProperties(struct VkPhysicalDevice_T *physicalDevice, struct VkPhysicalDeviceMemoryProperties *pMemoryProperties)\n", false, &_init_f_vkGetPhysicalDeviceMemoryProperties_7887, &_call_f_vkGetPhysicalDeviceMemoryProperties_7887);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceMemoryProperties2", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceMemoryProperties2(struct VkPhysicalDevice_T *physicalDevice, struct VkPhysicalDeviceMemoryProperties2 *pMemoryProperties)\n", false, &_init_f_vkGetPhysicalDeviceMemoryProperties2_7937, &_call_f_vkGetPhysicalDeviceMemoryProperties2_7937);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceProperties", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceProperties(struct VkPhysicalDevice_T *physicalDevice, struct VkPhysicalDeviceProperties *pProperties)\n", false, &_init_f_vkGetPhysicalDeviceProperties_7254, &_call_f_vkGetPhysicalDeviceProperties_7254);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceProperties2", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceProperties2(struct VkPhysicalDevice_T *physicalDevice, struct VkPhysicalDeviceProperties2 *pProperties)\n", false, &_init_f_vkGetPhysicalDeviceProperties2_7304, &_call_f_vkGetPhysicalDeviceProperties2_7304);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceQueueFamilyProperties", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceQueueFamilyProperties(struct VkPhysicalDevice_T *physicalDevice, unsigned int *pQueueFamilyPropertyCount, struct VkQueueFamilyProperties *pQueueFamilyProperties)\n", false, &_init_f_vkGetPhysicalDeviceQueueFamilyProperties_8810, &_call_f_vkGetPhysicalDeviceQueueFamilyProperties_8810);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceQueueFamilyProperties2", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceQueueFamilyProperties2(struct VkPhysicalDevice_T *physicalDevice, unsigned int *pQueueFamilyPropertyCount, struct VkQueueFamilyProperties2 *pQueueFamilyProperties)\n", false, &_init_f_vkGetPhysicalDeviceQueueFamilyProperties2_8860, &_call_f_vkGetPhysicalDeviceQueueFamilyProperties2_8860);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceSparseImageFormatProperties", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceSparseImageFormatProperties(struct VkPhysicalDevice_T *physicalDevice, enum VkFormat format, enum VkImageType type, enum VkSampleCountFlagBits samples, unsigned int usage, enum VkImageTiling tiling, unsigned int *pPropertyCount, struct VkSparseImageFormatProperties *pProperties)\n", false, &_init_f_vkGetPhysicalDeviceSparseImageFormatProperties_20004, &_call_f_vkGetPhysicalDeviceSparseImageFormatProperties_20004);
  methods += new qt_gsi::GenericMethod ("vkGetPhysicalDeviceSparseImageFormatProperties2", "@brief Method void QVulkanFunctions::vkGetPhysicalDeviceSparseImageFormatProperties2(struct VkPhysicalDevice_T *physicalDevice, const struct VkPhysicalDeviceSparseImageFormatInfo2 *pFormatInfo, unsigned int *pPropertyCount, struct VkSparseImageFormatProperties2 *pProperties)\n", false, &_init_f_vkGetPhysicalDeviceSparseImageFormatProperties2_15267, &_call_f_vkGetPhysicalDeviceSparseImageFormatProperties2_15267);
  return methods;
}

gsi::Class<QVulkanFunctions> decl_QVulkanFunctions ("QtGui", "QVulkanFunctions",
  methods_QVulkanFunctions (),
  "@qt\n@brief Binding of QVulkanFunctions");


GSI_QTGUI_PUBLIC gsi::Class<QVulkanFunctions> &qtdecl_QVulkanFunctions () { return decl_QVulkanFunctions; }

}

